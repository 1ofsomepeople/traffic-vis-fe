{"version":3,"sources":["common/apis.js","common/EchartsMapBoxVis.js","pages/home/Home.js","common/MapBoxPointsVis.js","common/basicCharts/Pie.js","common/basicCharts/Line.js","common/basicCharts/JamScoreDash.js","pages/analysis/Analysis.js","pages/prediction/PredictionAnalysis.js","layouts/BasicLayout.js","common/service.js","store/predictCompareStore.js","store/index.js","store/analysisStore.js","App.js","serviceWorker.js","index.js"],"names":["dataStr_dataObj","dataStr","dataArr","split","concat","parseInt","loadDataList","startTimeStr","endTimeStr","dataObj","DataNameList","timeIndex","push","timeIndexObj","String","slice","throttle","fn","delay","prev","Date","now","context","this","arg","arguments","apply","debounce","timer","clearTimeout","setTimeout","processJsonData","data","i","len","length","Option","Select","EchartsMapBoxVis","props","move_fly","mapbox","lon","lat","zoom","pitch","bearing","duration","nowMapParam","getZoom","center","getCenter","lng","getBearing","getPitch","easeTo","maxDuration","easing","t","animate","showmapbox","datatime","mapboxgl","accessToken","myChartGl","echarts","init","document","getElementById","mapContainerID","setOption","title","text","state","titleText","padding","subtext","subtextStyle","color","fontStyle","fontWeight","fontFamily","fontSize","visualMap","type","categories","show","calculable","realtime","hoverLink","left","bottom","dimension","pieces","value","label","min","max","mapbox3D","mapParam","style","series","coordinateSystem","shading","minHeight","maxHeight","barSize","silent","getModel","getComponent","getMapbox","setMinZoom","setMaxZoom","addControl","NavigationControl","showZoom","showCompass","visualizePitch","ScaleControl","maxWidth","unit","on","zoomLevel","asyncParam","mapStyleChange","newStyle","setStyle","chartsParam","window","bind","onresize","resize","newOption","flyActionParam","console","log","className","width","position","top","right","zIndex","defaultValue","onChange","id","height","Component","Home","span","Pie","chartsPie","showPie","chartsPieID","tooltip","trigger","formatter","name","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","Line","chartsLine","showLine","chartsLineID","timeStrList","index","str","toString","testOption","backgroundColor","axisPointer","lineStyle","x","y","x2","y2","colorStops","offset","global","grid","xAxis","axisLine","axisLabel","splitLine","axisTick","boundaryGap","yAxis","splitNumber","textStyle","showAllSymbol","symbol","symbolSize","normal","borderColor","borderWidth","areaStyle","graphic","LinearGradient","JamScoreDash","chartsDash","showDash","chartsDashID","angleAxis","clockwise","startAngle","radiusAxis","polar","roundCap","barWidth","pointer","detail","Analysis","inject","observer","resetCamera","setState","store","analysisStore","dataType","extraInfoSwitch","dataListIndex","isplaying","mapRef","React","createRef","loaddata","onClickBtn1","onClickBtn2","onClickBtn3","onClickBtn4","onClickBtn5","onClickBtn6","onClickBtn7","resizeAllCharts","jsonPath","fetch","response","json","undefined","resData","message","warning","intervalID","setInterval","path","clearInterval","timeoutID","intervalPlay","getRealTimeData","clearAll","getLayer","removeLayer","removeSource","geojson","centerPoint","features","geometry","coordinates","jumpTo","addSource","lineMetrics","addLayer","source","paint","layout","e","description","properties","Math","abs","lngLat","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","echartsMapContainer","current","gutter","ghost","onBack","history","back","extra","key","onClick","loading","dataGt","ref","bordered","column","size","Item","PredictionAnalysis","predictCompareStore","dataPred","titleTextLeft","titleTextRight","marks","sliderDisplay","historyPredDataPath","dataIndex","predictType","DataGtNameList","DataPredNameList","asyncMapParam","historyPredict_local","historyPredict_online","realTimePredice","sliderOnChange_local","selectOnChange_local","sliderOnChange_online","selectOnChange_online","positionParam","pathGt","pathPred","sliderMarks","element","join","historyGtQueryParam","historyPredQueryParam","getHistoryGt","getHistoryPred","getPredLr","getPredSage","predPath","align","justify","included","step","tooltipPlacement","tooltipVisible","display","disabled","content","scorePrecision","precisionClear","precisionSlow","precisionJam","precisionSlowJam","scoreMAE","scoreMAPE","dataLeft","dataRight","Header","Layout","Content","Footer","Sider","breadcrumbMap","Menu","SubMenu","icon","BorderOutlined","BlockOutlined","TeamOutlined","UserOutlined","routes","exact","component","BasicLayout","onCollapse","collapsed","pathSnippets","location","pathname","filter","extraBreadcrumbItems","map","_","url","to","HomeOutlined","BreadcrumbItems","getBreadcrumbItems","overflow","theme","defaultSelectedKeys","mode","marginLeft","margin","route","textAlign","withRouter","service","axios","create","baseURL","timeout","withCredentials","interceptors","use","error","errmessage","status","statusText","param","request","get","qs","stringify","res","jsonName","observable","action","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ee9df9af.chunk.js","sourcesContent":["\r\nfunction dataStr_dataObj(dataStr) {\r\n    let dataArr = dataStr.split('_')[0].split('-').concat(dataStr.split('_')[1].split('-'))\r\n    let resObj = {\r\n        'year': parseInt(dataArr[0]),\r\n        'month': parseInt(dataArr[1]),\r\n        'day': parseInt(dataArr[2]),\r\n        'hour': parseInt(dataArr[3]),\r\n        'minute': parseInt(dataArr[4]),\r\n    }\r\n    return resObj\r\n};\r\n\r\nfunction dataObj_dataStr(dataObj) {\r\n    return String(dataObj['year']) + '-' + ('0' + String(dataObj['month'])).slice(-2) + '-' + ('0' + String(dataObj['day'])).slice(-2) + '_' + ('0' + String(dataObj['hour'])).slice(-2) + '-' + ('0' + String(dataObj['minute'])).slice(-2)\r\n};\r\n\r\n// load datalist\r\nfunction loadDataList(startTimeStr,endTimeStr){\r\n    let DataNameList = []\r\n    // let startTimeStr = \"2019-04-02_08-30\"\r\n    // let endTimeStr = \"2019-04-02_09-30\"\r\n\r\n    let timeIndex = startTimeStr\r\n    while (timeIndex <= endTimeStr) {\r\n        DataNameList.push(timeIndex + '.json')\r\n\r\n        let timeIndexObj = dataStr_dataObj(timeIndex)\r\n\r\n        if (timeIndexObj['minute'] + 1 > 59) {\r\n            timeIndexObj['minute'] = 0\r\n            timeIndexObj['hour'] += 1\r\n        }\r\n        else {\r\n            timeIndexObj['minute'] += 1\r\n        }\r\n        timeIndex = dataObj_dataStr(timeIndexObj)\r\n    }\r\n    return DataNameList\r\n    \r\n}\r\n\r\nfunction eqArr(a, b) {\r\n    // 判断数组的长度\r\n    if (a.length !== b.length) {\r\n        return false\r\n    } else {\r\n        // 循环遍历数组的值进行比较\r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n// 4. 节流函数\r\n// 思路：在规定时间内只触发一次\r\nfunction throttle(fn, delay) {\r\n    // 利用闭包保存时间\r\n    let prev = Date.now()\r\n    return function () {\r\n        let context = this\r\n        let arg = arguments\r\n        let now = Date.now()\r\n        if (now - prev >= delay) {\r\n            fn.apply(context, arg)\r\n            prev = Date.now()\r\n        }\r\n    }\r\n}\r\n// 5. 防抖函数\r\n// 思路:在规定时间内未触发第二次，则执行\r\nfunction debounce(fn, delay) {\r\n    // 利用闭包保存定时器\r\n    let timer = null\r\n    return function () {\r\n        let context = this\r\n        let arg = arguments\r\n        // 在规定时间内再次触发会先清除定时器后再重设定时器\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            fn.apply(context, arg)\r\n        }, delay)\r\n    }\r\n}\r\n\r\n\r\n// 处理json数据 1,3,7,10的值映射到150,175,200\r\nfunction processJsonData(data){\r\n    // 数据处理\r\n    for (let i = 0, len = data.length; i < len; i++) {\r\n        // 数据映射 1->1 3->150 7-175 10->200\r\n        switch (data[i][2]) {\r\n            case 3:\r\n                data[i][2] = 150;\r\n                break;\r\n            case 7:\r\n                data[i][2] = 175;\r\n                break;\r\n            case 10:\r\n                data[i][2] = 200;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return data\r\n}\r\n\r\nexport {dataStr_dataObj, dataObj_dataStr, loadDataList, eqArr, throttle, debounce, processJsonData}","import React, { Component } from 'react';\r\nimport { Row, Col, Button, message, Select, Typography } from 'antd';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nimport './EchartsMapBoxVis.css'\r\nimport { eqArr } from './apis';\r\nimport Title from 'antd/lib/skeleton/Title';\r\nconst { Option } = Select;\r\n// const { Title } = Typography;\r\n\r\nclass EchartsMapBoxVis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // titleText: this.props.chartsParam.titleText ? this.props.chartsParam.titleText : ' ',\r\n            titleText: this.props.titleText,\r\n            mapParam: this.props.chartsParam.mapParam ? this.props.chartsParam.mapParam : null,\r\n        }\r\n        this.myChartGl = null // echarts对象实例\r\n        this.mapbox = null // mapbox对象实例\r\n        window.mapboxgl = mapboxgl;\r\n        // setTimeout(() => {\r\n        //     this.showmapbox(this.props.data.data, this.props.data.datatime);\r\n        // })\r\n        this.asyncParam = {\r\n            center: [116.368608, 39.901744],\r\n            // Mapbox 地图的缩放等级\r\n            zoom: 10,\r\n            // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n            pitch: 60,\r\n            // Mapbox 地图的旋转角度\r\n            bearing: -30,\r\n        }\r\n\r\n        this.showmapbox = this.showmapbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // window.mapboxgl = mapboxgl;\r\n        this.showmapbox(this.props.data.data, this.props.data.datatime);\r\n        window.onresize = () => {\r\n            this.myChartGl.resize()\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        let data = this.props.data.data\r\n        let datatime = this.props.data.datatime\r\n        let asyncParam = this.props.asyncParam ? this.props.chartsParam.mapParam : null\r\n\r\n        let newOption = {\r\n            title: {\r\n                text: this.props.titleText,\r\n                subtext: datatime ? datatime : '',\r\n            },\r\n            series: [{\r\n                data: data ? data : [],\r\n                barSize: (2 ** (this.mapbox.getZoom() - 10) * 0.1),\r\n            }],\r\n        }\r\n        if (asyncParam) {\r\n            newOption.mapbox3D = {\r\n                center: asyncParam.center,\r\n                zoom: asyncParam.zoom,\r\n                pitch: asyncParam.pitch,\r\n                bearing: asyncParam.bearing,\r\n            }\r\n        }\r\n        this.myChartGl.setOption(newOption)\r\n\r\n        let flyActionParam = this.props.flyActionParam\r\n        if (flyActionParam) {\r\n            this.move_fly(this.mapbox, ...flyActionParam);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('EchartsMapBoxVis Destory')\r\n        this.myChartGl = null // echarts对象实例\r\n        this.mapbox = null // mapbox对象实例\r\n        // window.mapboxgl = null\r\n    }\r\n\r\n    move_fly = (mapbox, lon, lat, zoom, pitch, bearing, duration) => {\r\n        this.nowMapParam = {\r\n            zoom: this.mapbox.getZoom(),\r\n            center: [this.mapbox.getCenter().lng, this.mapbox.getCenter().lat],\r\n            bearing: this.mapbox.getBearing(),\r\n            pitch: this.mapbox.getPitch()\r\n        }\r\n        if (lon !== this.nowMapParam.center[0] || lat !== this.nowMapParam.center[1] || zoom !== this.nowMapParam.zoom || pitch !== this.nowMapParam.pitch || bearing !== this.nowMapParam.bearing) {\r\n            mapbox.easeTo({\r\n                // CameraOptions\r\n                center: [lon, lat],\r\n                zoom: zoom,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: pitch,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: bearing,\r\n\r\n                // AnimationOptions\r\n                // 动态转换的持续时间，按毫秒计算\r\n                duration: duration,\r\n                maxDuration: duration,\r\n                // 该函数持续的时间在 0~1 之间， 返回一个表示状态的数字，初始状态为 0，最终状态为 1\r\n                easing(t) {\r\n                    return t;\r\n                    // return t*(2-t);\r\n                },\r\n                // If false , no animation will occur.\r\n                animate: true\r\n            });\r\n        }\r\n    };\r\n\r\n    showmapbox = (data = [], datatime = \"\") => {\r\n\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiaHVzdDEyIiwiYSI6ImNrM3BpbDhsYTAzbDgzY3J2OXBzdXFuNDMifQ.bDD9-o_SB4fR0UXzYLy9gg';\r\n\r\n        // echarts对象实例\r\n        this.myChartGl = echarts.init(document.getElementById(this.props.mapContainerID));\r\n\r\n        // let zoomeLevel = 11\r\n        // let barSize = (2 ** (zoomeLevel - 11)) * 0.08\r\n        this.myChartGl.setOption({\r\n            title: {\r\n                // text: '交通拥堵情况三维柱状图',\r\n                text: this.state.titleText,\r\n                padding: 20,//各个方向的内边距，默认是5，可以自行设置\r\n                subtext: datatime ? datatime : '', //\"2019-12-13 14:00\", //主标题的副标题文本内容，如果需要副标题就配置这一项\r\n                subtextStyle: {//副标题内容的样式\r\n                    color: 'black',\r\n                    fontStyle: 'normal',//主标题文字字体风格，默认normal，有italic(斜体),oblique(斜体)\r\n                    fontWeight: \"bold\",//可选normal(正常)，bold(加粗)，bolder(加粗)，lighter(变细)，100|200|300|400|500...\r\n                    fontFamily: \"san-serif\",//主题文字字体，默认微软雅黑\r\n                    fontSize: 16//主题文字字体大小，默认为12px\r\n                },\r\n            },\r\n            visualMap: {\r\n                type: 'piecewise', //分段型\r\n                categories: ['拥堵', '缓行', '通畅'],\r\n\r\n                // visualMap-continuous组件配置\r\n                show: true, //是否显示 visualMap-continuous 组件。如果设置为 false，不会显示，但是数据映射的功能还存在。\r\n                calculable: true, //是否显示拖拽用的手柄（手柄能拖拽调整选中范围）\r\n                realtime: true, //拖拽时，是否实时更新。\r\n                hoverLink: true,\r\n                left: 20,\r\n                bottom: 40,\r\n                dimension: 2, //指定用数据的『哪个维度』，映射到视觉元素上,默认取 data 中最后一个维度。\r\n                color: ['red', '#eac736', 'green'],\r\n                pieces: [\r\n                    { value: 150, label: '通畅', color: '#369674' }, // 表示value等于150的情况。\r\n                    { value: 175, label: '缓行', color: '#feb64d' },\r\n                    { value: 200, label: '拥堵', color: 'red' },\r\n                ],\r\n                min: 100,\r\n                max: 500,\r\n            },\r\n            // mapbox3D: {\r\n            //     // echarts-gl中mapbox只能应用部分配置，更多的mapbox配置要使用mapbox的api\r\n            //     // Mapbox 地图样式 style\r\n            //     style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            //     // Mapbox 地图中心经纬度,经纬度用数组表示\r\n            //     center: [116.368608, 39.901744],\r\n            //     // Mapbox 地图的缩放等级\r\n            //     zoom: 10,\r\n            //     // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n            //     pitch: 60,\r\n            //     // Mapbox 地图的旋转角度\r\n            //     bearing: -30,\r\n            // },\r\n            mapbox3D: this.state.mapParam ? this.state.mapParam : {\r\n                // echarts-gl中mapbox只能应用部分配置，更多的mapbox配置要使用mapbox的api\r\n                // Mapbox 地图样式 style\r\n                style: 'mapbox://styles/mapbox/outdoors-v11',\r\n                // Mapbox 地图中心经纬度,经纬度用数组表示\r\n                center: [116.368608, 39.901744],\r\n                // Mapbox 地图的缩放等级\r\n                zoom: 10,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: 60,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: -30,\r\n            },\r\n\r\n            series: [{\r\n                type: 'bar3D',\r\n                coordinateSystem: 'mapbox3D',\r\n                data: data ? data : [],\r\n                shading: 'color',\r\n                minHeight: 100,\r\n                maxHeight: 500,\r\n                barSize: 0.1,\r\n                // 图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。\r\n                silent: true, //设置为true 大大优化响应时间\r\n            }],\r\n\r\n        });\r\n\r\n        // 获取mapbox对象实例\r\n        this.mapbox = this.myChartGl.getModel().getComponent('mapbox3D').getMapbox();\r\n\r\n        // 设置mapbox的zoom范围\r\n        this.mapbox.setMinZoom(10);\r\n        this.mapbox.setMaxZoom(16);\r\n\r\n        // 添加缩放和指南针控件\r\n        this.mapbox.addControl(new mapboxgl.NavigationControl({\r\n            showZoom: true,\r\n            showCompass: true,\r\n            visualizePitch: true,\r\n        }), 'top-right');\r\n\r\n        // 添加比例尺控件\r\n        this.mapbox.addControl(new mapboxgl.ScaleControl({\r\n            maxWidth: 80,\r\n            unit: 'metric'\r\n        }), 'bottom-right');\r\n\r\n        // // 添加全屏控件 只能显示mapbox不能显示echarts\r\n        // this.mapbox.addControl(new mapboxgl.FullscreenControl({ \r\n        //     container: document.querySelector('mapbox_echartgl') }\r\n        // ));\r\n\r\n        // this.mapbox.on('load', function () {\r\n        //     console.log(\"地图加载\")\r\n        //     // window.mapboxgl = null;\r\n        // });\r\n\r\n        this.mapbox.on('mousemove', () => {\r\n            let zoomLevel = this.mapbox.getZoom()\r\n            let center = [this.mapbox.getCenter().lng, this.mapbox.getCenter().lat]\r\n            let bearing = this.mapbox.getBearing()\r\n            let pitch = this.mapbox.getPitch()\r\n\r\n            if (this.props.asyncParam) {\r\n                if (this.asyncParam.center[0] != center[0] || this.asyncParam.center[1] != center[1] || this.asyncParam.zoom != zoomLevel || this.asyncParam.bearing != bearing || this.asyncParam.pitch != pitch) {\r\n                    this.asyncParam.center = center\r\n                    this.asyncParam.zoom = zoomLevel\r\n                    this.asyncParam.bearing = bearing\r\n                    this.asyncParam.pitch = pitch\r\n                    this.props.asyncParam(this.asyncParam)\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    // 修改map的style\r\n    mapStyleChange = (value) => {\r\n        let newStyle = 'mapbox://styles/mapbox/' + value + '-v9'\r\n        // console.log(newStyle)\r\n        this.mapbox.setStyle(newStyle);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className = \"mapNav\"\r\n                    style={{\r\n                        width: '100px',\r\n                        position: 'absolute',\r\n                        top: '12px',\r\n                        right: '60px',\r\n                        zIndex: 1,\r\n                    }}\r\n                >\r\n                    {/* <Title level={1}>Ant Design 4.0</Title> */}\r\n                    <p className=\"navTitle\">地图样式</p>\r\n                    <Select\r\n                        defaultValue=\"streets\"\r\n                        style={{\r\n                            width: '100px',\r\n                        }}\r\n                        onChange={this.mapStyleChange}\r\n                    >\r\n                        <Option value=\"streets\">streets</Option>\r\n                        <Option value=\"light\">light</Option>\r\n                        <Option value=\"dark\">dark</Option>\r\n                        <Option value=\"outdoors\">outdoors </Option>\r\n                        <Option value=\"satellite\">satellite</Option>\r\n                    </Select>\r\n                </div>\r\n\r\n                <div\r\n                    id={this.props.mapContainerID}\r\n                    className=\"mapBoxContainer\"\r\n                    style={{ minHeight: \"600px\", height: \"100%\", width: \"100%\" }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EchartsMapBoxVis;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport MapBoxPointsVis from '../../common/MapBoxPointsVis'\r\n\r\nimport './home.css';\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={6} className=\"positionLeft\">\r\n                        交通数据可视化\r\n                    </Col>\r\n                    <Col span={18} className=\"positionRight\">\r\n                        {/* <MapBoxPointsVis mapContainerID=\"homeBar1\"/> */}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={18} className=\"positionLeft\">\r\n                        \r\n                    </Col>\r\n                    <Col span={6} className=\"positionRight\">\r\n                        拥堵分析\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={6} className=\"positionLeft\">\r\n                        实时预测\r\n                    </Col>\r\n                    <Col span={18} className=\"positionRight\">\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nclass MapBoxPointsVis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.map = null;\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiaHVzdDEyIiwiYSI6ImNrM3BpbDhsYTAzbDgzY3J2OXBzdXFuNDMifQ.bDD9-o_SB4fR0UXzYLy9gg';\r\n        \r\n    }\r\n\r\n    showMap(){\r\n        this.map = new mapboxgl.Map({\r\n            container: this.props.mapContainerID,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            zoom: 10,\r\n            center: [116.368608, 39.901744],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.showMap();\r\n        window.onresize = () => {\r\n            this.map.resize()\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <div id={this.props.mapContainerID} style={{ minHeight: \"600px\",height:\"100%\" }}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MapBoxPointsVis;","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nclass Pie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n        this.chartsPie = null // echarts对象实例\r\n        \r\n        this.showPie = this.showPie.bind(this)\r\n\r\n        \r\n    }\r\n\r\n    \r\n    showPie() {\r\n        // echarts对象实例\r\n        this.chartsPie = echarts.init(document.getElementById(this.props.chartsPieID));\r\n\r\n        let initOption = {\r\n            title: {\r\n                text: '拥堵占比',\r\n                left: 'top', // title 组件离容器左侧的距离。\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            \r\n            series: [\r\n                {\r\n                    name: '拥堵比例',\r\n                    type: 'pie',\r\n                    radius: '70%',\r\n                    center: ['50%', '50%'],\r\n                    data: [\r\n                        { value: 335, name: '拥堵' },\r\n                        { value: 310, name: '缓行' },\r\n                        { value: 1548, name: '畅通' }\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.chartsPie.setOption(initOption)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showPie();\r\n        window.onresize = () => {\r\n            this.chartsPie.resize()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('chartsPie Destory')\r\n        this.chartsPie = null // echarts对象实例\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.chartsPieID} style={{ minHeight: \"200px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pie;","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nclass Line extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n        this.chartsLine = null // echarts对象实例\r\n        \r\n        this.showLine = this.showLine.bind(this)\r\n    }\r\n\r\n    showLine() {\r\n        // echarts对象实例\r\n        this.chartsLine = echarts.init(document.getElementById(this.props.chartsLineID));\r\n\r\n        let timeStrList = []\r\n        for (let index = 0; index < 24; index++) {\r\n            let str = index.toString()\r\n            if(index<10){\r\n                str = '0'+str\r\n            }\r\n            str = str + ':00'\r\n            timeStrList.push(str)\r\n        }\r\n        let testOption = {\r\n            title: {\r\n                text: this.props.titleText,\r\n                left: 'top' // title 组件离容器左侧的距离。\r\n            },\r\n            backgroundColor: '#fff',\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                backgroundColor: 'rgba(0,0,0,0.5)',\r\n                axisPointer: {\r\n                    lineStyle: {\r\n                        color: {\r\n                            type: 'linear',\r\n                            x: 0,\r\n                            y: 0,\r\n                            x2: 0,\r\n                            y2: 1,\r\n                            colorStops: [{\r\n                                offset: 0,\r\n                                color: 'red'\r\n                            }, {\r\n                                offset: 0.5,\r\n                                color: '#48b3FF',\r\n                            }, {\r\n                                offset: 1,\r\n                                color: '#d9efff'\r\n                            }],\r\n                            global: false\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n            grid: {\r\n                top: '20%',\r\n                left: '5%',\r\n                right: '5%',\r\n                bottom: '10%',\r\n                // containLabel: true\r\n            },\r\n            xAxis: [{\r\n                type: 'category',\r\n                color: '#59588D',\r\n                axisLine: {\r\n                    show: true\r\n                },\r\n                axisLabel: {\r\n                    color: '#282828'\r\n                },\r\n                splitLine: {\r\n                    show: true\r\n                },\r\n\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                boundaryGap: true,\r\n                data: timeStrList,\r\n\r\n            }],\r\n\r\n            yAxis: [{\r\n                type: 'value',\r\n                min: 0,\r\n                splitNumber: 4,\r\n                splitLine: {\r\n                    show: true,\r\n\r\n                },\r\n                axisLine: {\r\n                    show: true,\r\n                },\r\n                axisLabel: {\r\n                    show: true,\r\n                    // margin: 20,\r\n                    textStyle: {\r\n                        color: '#737373',\r\n\r\n                    },\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    lineStyle: {\r\n                        color: 'rgba(131,101,101,0.2)',\r\n                        type: 'dashed',\r\n                    }\r\n                }\r\n            }],\r\n            series: [{\r\n                name: '',\r\n                type: 'line',\r\n                // smooth: true, //是否平滑\r\n                showAllSymbol: true,\r\n                symbol: 'circle',\r\n                symbolSize: 10,\r\n                lineStyle: {\r\n                    normal: {\r\n                        color: \"#48B3FF\"\r\n                    },\r\n                },\r\n                label: {\r\n                    show: false,\r\n                    position: 'top',\r\n                    textStyle: {\r\n                        color: '#48B3FF',\r\n                    }\r\n                },\r\n\r\n                itemStyle: {\r\n                    color: \"#FFF\",\r\n                    borderColor: \"#48B3FF\",\r\n                    borderWidth: 2,\r\n\r\n                },\r\n                tooltip: {\r\n                    show: true\r\n                },\r\n                areaStyle: {\r\n                    normal: {\r\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(195,230,255,1)'\r\n                        },\r\n                        {\r\n                            offset: 1,\r\n                            color: 'rgba(195,230,255,0.1)'\r\n                        }\r\n                        ], false),\r\n                        shadowColor: 'rgba(195,230,255,0.1)',\r\n                        shadowBlur: 20\r\n                    }\r\n                },\r\n                data: [55, 35, 62, 55, 97, 64, 44, 66, 78, 82, 33, 77,55, 35, 62, 55, 97, 64, 44, 66, 78, 82, 33, 77,78],\r\n            }]\r\n        };\r\n\r\n        this.chartsLine.setOption(testOption)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showLine();\r\n        window.onresize = () => {\r\n            this.chartsLine.resize()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        console.log('chartsLine Destory')\r\n        this.chartsLine = null // echarts对象实例\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.chartsLineID} style={{ minHeight: \"200px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Line;\r\n\r\n","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nclass JamScoreDash extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n\r\n        this.chartsDash = null // echarts对象实例\r\n        \r\n        this.showDash = this.showDash.bind(this)\r\n    }\r\n\r\n    showDash() {\r\n        // echarts对象实例\r\n        this.chartsDash = echarts.init(document.getElementById(this.props.chartsDashID));\r\n\r\n        let testOption = {\r\n            title: {\r\n                text: '拥堵指数',\r\n                left: 'top' // title 组件离容器左侧的距离。\r\n            },\r\n            angleAxis: {\r\n                max: 100, \r\n                clockwise: true,\r\n                startAngle: -135,\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            },\r\n            radiusAxis: {\r\n                type: 'category',\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            },\r\n            polar: {\r\n                center: ['50%', '50%'],\r\n                radius: '160%' //图形大小\r\n            },\r\n            series: [{\r\n                type: 'bar',\r\n                data: [{\r\n                    value: 75,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(1, 0, 0, 0, [{\r\n                                offset: 1,\r\n                                color: '#369674'\r\n                            }, {\r\n                                offset: 0.70,\r\n                                color: '#feb64d'\r\n                            }, {\r\n                                offset: 0,\r\n                                color: '#ff0000'\r\n                            }])\r\n                        }\r\n                    },\r\n                }],\r\n                coordinateSystem: 'polar',\r\n                roundCap: true,\r\n                barWidth: 10,\r\n            }, {\r\n                type: 'gauge',\r\n                radius: '110%',\r\n                min: 0,\r\n                max: 100,\r\n                splitNumber: 4,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    color: '#999999',\r\n                    fontSize: 10\r\n                },\r\n                itemStyle: {\r\n                    color: '#999999'\r\n                },\r\n                pointer: {\r\n                    length: '50%',\r\n                    width: 6\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                detail: {\r\n                    color: '#333333',\r\n                    fontSize: 25\r\n                },\r\n                data: [50]\r\n            }]\r\n        };\r\n\r\n        this.chartsDash.setOption(testOption)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showDash();\r\n        window.onresize = () => {\r\n            this.chartsDash.resize()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('chartsDash Destory')\r\n        this.chartsDash = null // echarts对象实例\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.chartsDashID} style={{ minHeight: \"200px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default JamScoreDash;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, PageHeader, message, Statistic, Progress, Card, Timeline, Descriptions, Popover } from 'antd';\r\nimport { ArrowUpOutlined, ArrowDownOutlined, AlertOutlined } from '@ant-design/icons';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport { dataStr_dataObj, dataObj_dataStr, loadDataList, throttle, debounce } from '../../common/apis';\r\nimport { inject, observer } from 'mobx-react';\r\nimport echarts from 'echarts';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport * as d3 from 'd3';\r\n\r\nimport './Analysis.css'\r\nimport Pie from '../../common/basicCharts/Pie';\r\nimport Line from '../../common/basicCharts/Line';\r\nimport JamScoreDash from '../../common/basicCharts/JamScoreDash';\r\n\r\n\r\n@inject('store')\r\n@observer\r\nclass Analysis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.store = props.store.analysisStore\r\n        this.state = {\r\n            // 模拟数据\r\n            data: {\r\n                data: [\r\n                    [116.368608, 39.901744, 150],\r\n                    [116.378608, 39.901744, 350],\r\n                    [116.388608, 39.901744, 500],\r\n                ],\r\n                datatime: ''\r\n            },\r\n            dataType: 'history',\r\n            chartsParam: {\r\n                // titleText: \"交通拥堵情况三维柱状图\",\r\n            },\r\n            titleText: \"\",\r\n\r\n            // 展示额外信息的组件的显示和隐藏\r\n            // 0 默认 不展示\r\n            // 1 城市级\r\n            // 2 道路级\r\n            // 3 节点级\r\n            extraInfoSwitch: 0, // 额外信息\r\n        }\r\n        window.mapboxgl = mapboxgl;\r\n        this.DataNameList = null // 轮播的数据name list\r\n        this.dataListIndex = 0 // 遍历数据list的index\r\n        this.isplaying = false // 数据是否正在轮播\r\n\r\n        this.mapRef = React.createRef(); // ref\r\n        this.mapbox = null // mapbox实例\r\n        // window.mapboxgl = mapboxgl;\r\n\r\n\r\n        this.loaddata = this.loaddata.bind(this)\r\n        this.onClickBtn1 = this.onClickBtn1.bind(this)\r\n        this.onClickBtn2 = this.onClickBtn2.bind(this)\r\n        this.onClickBtn3 = this.onClickBtn3.bind(this)\r\n        this.onClickBtn4 = this.onClickBtn4.bind(this)\r\n        this.onClickBtn5 = this.onClickBtn5.bind(this)\r\n        this.onClickBtn6 = this.onClickBtn6.bind(this)\r\n        this.onClickBtn7 = this.onClickBtn7.bind(this)\r\n        this.resizeAllCharts = this.resizeAllCharts.bind(this)\r\n    };\r\n\r\n    // 加载数据\r\n    async loaddata(jsonPath) {\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let response = await fetch(jsonPath)\r\n        let resData = await response.json();\r\n        resData = resData.data\r\n        if (resData === undefined) {\r\n            message.warning('获取数据失败');\r\n        }\r\n        else {\r\n            // 数据处理\r\n            for (let i = 0, len = resData.length; i < len; i++) {\r\n                // 数据映射 1->1 3->150 7-175 10->200\r\n                switch (resData[i][2]) {\r\n                    case 3:\r\n                        resData[i][2] = 150;\r\n                        break;\r\n                    case 7:\r\n                        resData[i][2] = 175;\r\n                        break;\r\n                    case 10:\r\n                        resData[i][2] = 200;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            data.data = resData\r\n            data.datatime = jsonPath.split('/')[jsonPath.split('/').length - 1].split('.')[0]\r\n        }\r\n        this.setState({\r\n            data: data,\r\n            dataType: 'history',\r\n            titleText: \"交通拥堵情况三维柱状图\",\r\n        })\r\n        return data\r\n    }\r\n\r\n\r\n\r\n    intervalPlay(DataNameList) {\r\n        this.intervalID = setInterval(() => {\r\n            let path = './testDataList/' + DataNameList[this.dataListIndex > DataNameList.length ? this.dataListIndex = 0 : this.dataListIndex++]\r\n            this.loaddata(path)\r\n        }, 500)\r\n    }\r\n\r\n    // 加载测试数据\r\n    onClickBtn1() {\r\n        this.loaddata(\"./2019-04-02_09-00.json\")\r\n        this.setState({\r\n            ...this.state,\r\n            extraInfoSwitch: 1,\r\n        }, () => {\r\n            this.resizeAllCharts()\r\n        })\r\n    }\r\n    // 数据轮播\r\n    onClickBtn2() {\r\n        // this.setState({\r\n        //     ...this.state,\r\n        //     flyActionParam: null\r\n        // })\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            clearTimeout(this.timeoutID)\r\n            this.intervalID = null\r\n            this.isplaying = false\r\n        }\r\n        else {\r\n            this.isplaying = true\r\n\r\n            let startTimeStr = \"2019-04-02_08-30\"\r\n            let endTimeStr = \"2019-04-02_09-30\"\r\n            this.DataNameList = loadDataList(startTimeStr, endTimeStr)\r\n            this.intervalPlay(this.DataNameList)\r\n        }\r\n    }\r\n    // 加载实时交通数据\r\n    onClickBtn3() {\r\n        // message.warning('正在开发中');\r\n        this.store.getRealTimeData()\r\n        this.setState({\r\n            ...this.state,\r\n            dataType: 'realtime',\r\n            titleText: \"交通实时拥堵情况三维柱状图\",\r\n            extraInfoSwitch: 0,\r\n        }, () => {\r\n            this.resizeAllCharts()\r\n        })\r\n    }\r\n    // 局部展示\r\n    onClickBtn4() {\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            this.intervalID = null\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.360163, 40.001514, 14, 60, -45, 1000]\r\n        }, () => {\r\n            if (this.DataNameList && this.isplaying) {\r\n                this.timeoutID = setTimeout(() => {\r\n                    this.intervalPlay(this.DataNameList)\r\n                    this.setState({\r\n                        ...this.state,\r\n                        flyActionParam: null\r\n                    })\r\n                }, 2000)\r\n            }\r\n\r\n        })\r\n    }\r\n    // 全局展示\r\n    onClickBtn5() {\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            this.intervalID = null\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.420608, 39.851744, 11.5, 60, -30, 1000]\r\n        }, () => {\r\n            if (this.DataNameList && this.isplaying) {\r\n                this.timeoutID = setTimeout(() => {\r\n                    this.intervalPlay(this.DataNameList)\r\n                    this.setState({\r\n                        ...this.state,\r\n                        flyActionParam: null\r\n                    })\r\n                }, 2000)\r\n            }\r\n        })\r\n    }\r\n    // 重置地图，更新摄像机视角\r\n    resetCamera = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.368608, 39.901744, 10, 60, -30, 1000],\r\n        })\r\n    }\r\n    // 地图重置\r\n    onClickBtn6() {\r\n        this.store.clearAll()\r\n        this.setState({\r\n            data: {\r\n                data: [],\r\n                datatime: ''\r\n            },\r\n            titleText: \"\",\r\n            // flyActionParam: [116.368608, 39.901744, 10, 60, -30, 1000],\r\n            extraInfoSwitch: 0,\r\n        }, () => {\r\n            this.resizeAllCharts()\r\n            this.resetCamera()\r\n        })\r\n        clearInterval(this.intervalID);\r\n        clearTimeout(this.timeoutID)\r\n        this.timeoutID = null\r\n        this.intervalID = null\r\n        this.DataNameList = null\r\n        this.dataListIndex = 0\r\n\r\n        // 清除mapbox图层和数据源\r\n        if (this.mapbox.getLayer('line')) {\r\n            this.mapbox.removeLayer('line')\r\n            this.mapbox.removeSource('line')\r\n            this.mapbox.removeLayer('linePoint')\r\n            this.mapbox.removeSource('linePoint')\r\n        }\r\n    }\r\n    onClickBtn7() {\r\n        // 清除mapbox图层和数据源\r\n        if (this.mapbox.getLayer('line')) {\r\n            this.mapbox.removeLayer('line')\r\n            this.mapbox.removeSource('line')\r\n            this.mapbox.removeLayer('linePoint')\r\n            this.mapbox.removeSource('linePoint')\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            titleText: \"道路拥堵情况\",\r\n            extraInfoSwitch: 2,\r\n        }, () => {\r\n            this.resizeAllCharts()\r\n        })\r\n\r\n        let color = [\r\n            '#ff0000', // red\r\n            '#feb64d', // yello \r\n            '#369674', // green\r\n        ]\r\n\r\n        // 道路测试数据\r\n        let geojson = {\r\n            \"type\": \"FeatureCollection\",\r\n            \"features\": [\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        'color': color[0]\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"LineString\",\r\n                        \"coordinates\": [\r\n                            [116.326534, 39.993866],\r\n                            [116.326624, 39.991486],\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        'color': color[1]\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"LineString\",\r\n                        \"coordinates\": [\r\n                            [116.326624, 39.991486],\r\n                            [116.326964, 39.984936],\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        'color': color[2]\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"LineString\",\r\n                        \"coordinates\": [\r\n                            [116.326964, 39.984936],\r\n                            [116.327105, 39.982096],\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        'color': color[1]\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"LineString\",\r\n                        \"coordinates\": [\r\n                            [116.327105, 39.982096],\r\n                            [116.327225, 39.979745],\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        'color': color[0]\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"LineString\",\r\n                        \"coordinates\": [\r\n                            [116.327225, 39.979745],\r\n                            [116.327405, 39.975575],\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        'color': color[2]\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"LineString\",\r\n                        \"coordinates\": [\r\n                            [116.327405, 39.975575],\r\n                            [116.327585, 39.972785],\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        'color': color[1]\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"LineString\",\r\n                        \"coordinates\": [\r\n                            [116.327585, 39.972785],\r\n                            [116.327895, 39.966405]\r\n                        ],\r\n                    }\r\n                },\r\n            ]\r\n        };\r\n        // 道路路段中点点测试数据\r\n        let roadPointsgeojson = {\r\n            \"type\": \"FeatureCollection\",\r\n            \"features\": [\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"description\": \"<strong>双清路 至 成府路</strong><p>拥堵，时速20公里</p>\",\r\n                        \"icon\": \"bar\"\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [116.326579, 39.992676]\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"description\": \"<strong>成府路 至 北四环西路辅路</strong><p>畅通，时速59公里</p>\",\r\n                        \"icon\": \"bar\"\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [116.326794, 39.988151]\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"description\": \"<strong>北四环西路辅路 至 中关村南一条</strong><p>缓慢，时速34公里</p>\",\r\n                        \"icon\": \"bar\"\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [116.3270595, 39.983146]\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"description\": \"<strong>中关村南一条 至 中关村南路</strong><p>缓慢，时速40公里</p>\",\r\n                        \"icon\": \"bar\"\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [116.327185, 39.98055]\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"description\": \"<strong>中关村南路 至 知春路</strong><p>缓慢，时速27公里</p>\",\r\n                        \"icon\": \"bar\"\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [116.327315, 39.97766]\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"description\": \"<strong>知春路 至 双榆树北路</strong><p>缓慢，时速39公里</p>\",\r\n                        \"icon\": \"bar\"\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [116.32752, 39.97376]\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"Feature\",\r\n                    \"properties\": {\r\n                        \"description\": \"<strong>双榆树北路 至 北三环西路辅路</strong><p>畅通，时速41公里</p>\",\r\n                        \"icon\": \"bar\"\r\n                    },\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [116.327765, 39.968965]\r\n                    }\r\n                },\r\n            ]\r\n        };\r\n\r\n        let speedValue = [20, 59, 34, 40, 27, 39, 41]\r\n\r\n        let centerPoint = geojson.features[geojson.features.length >> 1].geometry.coordinates[0]\r\n        // setup the viewport\r\n        this.mapbox.jumpTo({\r\n            'center': centerPoint,\r\n            'zoom': 13,\r\n            'pitch': 0,\r\n            'bearing': 0,\r\n        });\r\n\r\n        if (this.mapbox.getLayer('line')) {\r\n            console.log('mapbox line layer exist')\r\n        }\r\n        else {\r\n            this.mapbox.addSource('line', {\r\n                type: 'geojson',\r\n                lineMetrics: true,\r\n                data: geojson\r\n            });\r\n            // the layer must be of type 'line'\r\n            this.mapbox.addLayer({\r\n                type: 'line',\r\n                source: 'line',\r\n                id: 'line',\r\n                paint: {\r\n                    // 'line-gap-width': 1,\r\n                    'line-opacity': 0.8,\r\n                    'line-color': ['get', 'color'],\r\n                    'line-width': 8,\r\n                },\r\n                layout: {\r\n                    'line-cap': 'butt',\r\n                    'line-join': 'miter',\r\n                }\r\n            });\r\n\r\n\r\n            this.mapbox.addSource('linePoint', {\r\n                type: 'geojson',\r\n                lineMetrics: true,\r\n                data: roadPointsgeojson\r\n            });\r\n            // 添加路段注释点图层\r\n            this.mapbox.addLayer({\r\n                type: 'symbol',\r\n                id: 'linePoint',\r\n                source: 'linePoint',\r\n                \"layout\": {\r\n                    \"icon-image\": \"{icon}-15\",\r\n                    \"icon-allow-overlap\": true\r\n                }\r\n            });\r\n\r\n            this.mapbox.on('click', 'linePoint', (e) => {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n                var description = e.features[0].properties.description;\r\n                // Ensure that if the map is zoomed out such that multiple\r\n                // copies of the feature are visible, the popup appears\r\n                // over the copy being pointed to.\r\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                }\r\n                // Populate the popup and set its coordinates\r\n                // based on the feature found.\r\n                new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(this.mapbox);\r\n            });\r\n            // Change the cursor to a pointer when the mouse is over the places layer.\r\n            // 回调函数要用箭头函数啊，否则会改变this的指向\r\n            this.mapbox.on('mouseenter', 'linePoint', () => {\r\n                this.mapbox.getCanvas().style.cursor = 'pointer';\r\n\r\n            });\r\n            this.mapbox.on('mouseleave', 'linePoint', () => {\r\n                this.mapbox.getCanvas().style.cursor = '';\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    // 调整charts大小\r\n    resizeAllCharts() {\r\n        this.echartsMapContainer = echarts.init(document.getElementById(\"mapContainer\"))\r\n        this.echartsMapContainer.resize();\r\n        echarts.init(document.getElementById(\"pie1\")).resize();\r\n        echarts.init(document.getElementById(\"line1\")).resize();\r\n        echarts.init(document.getElementById(\"dash1\")).resize();\r\n        echarts.init(document.getElementById(\"line2\")).resize();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onresize = this.resizeAllCharts\r\n        // 获取mapbox对象实例\r\n        this.mapbox = this.mapRef.current.mapbox\r\n        // this.mapbox = this.echartsMapContainer.getModel().getComponent('mapbox3D').getMapbox();\r\n        // this.mapRef.current.mapbox.setStyle('mapbox://styles/mapbox/dark-v10')\r\n    };\r\n\r\n    componentDidUpdate() {\r\n\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        console.log('Analysis Destory')\r\n        this.store.clearAll()\r\n        this.mapbox = null\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id='analysisLayout'>\r\n                <Row gutter={[16, 0]}>\r\n                    <Col span={24}>\r\n                        <PageHeader\r\n                            ghost={false}\r\n                            onBack={() => window.history.back()}\r\n                            title=\"交通拥堵可视化分析\"\r\n                            // subTitle=\"交通拥堵\"\r\n                            extra={[\r\n                                <Button\r\n                                    key=\"1\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.onClickBtn1}\r\n                                    loading={this.store.loading}\r\n                                >测试数据</Button>,\r\n                                <Button\r\n                                    key=\"2\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn2, 500)}\r\n                                    loading={this.store.loading}\r\n                                >数据轮播</Button>,\r\n                                <Button\r\n                                    key=\"3\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn3, 500)}\r\n                                    loading={this.store.loading}\r\n                                >实时交通</Button>,\r\n                                <Button\r\n                                    key=\"7\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.onClickBtn7}\r\n                                    loading={this.store.loading}\r\n                                >\r\n                                    线路测试\r\n                                </Button>,\r\n                                <Button\r\n                                    key=\"4\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn4, 500)}\r\n                                    loading={this.store.loading}\r\n                                >局部演示</Button>,\r\n                                <Button\r\n                                    key=\"5\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn5, 500)}\r\n                                    loading={this.store.loading}\r\n                                >全局演示</Button>,\r\n                                <Button\r\n                                    key=\"6\"\r\n                                    onClick={this.onClickBtn6}\r\n                                    loading={this.store.loading}\r\n                                >地图重置</Button>,\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[16, 4]} >\r\n                    <Col span={this.state.extraInfoSwitch > 0 ? 16 : 24} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainer\"\r\n                            chartsParam={this.state.chartsParam}\r\n                            data={this.state.dataType === 'history' ? this.state.data : this.store.dataGt}\r\n                            flyActionParam={this.state.flyActionParam}\r\n                            titleText={this.state.titleText}\r\n                            ref={this.mapRef}\r\n                        />\r\n                    </Col>\r\n                    <Col span={this.state.extraInfoSwitch === 1 ? 8 : 0} >\r\n                        <Row gutter={[16, 4]}>\r\n                            <Col span={8}>\r\n                                <JamScoreDash chartsDashID=\"dash1\" />\r\n                            </Col >\r\n                            <Col span={16}>\r\n                                <Pie chartsPieID=\"pie1\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[16, 4]}>\r\n                            <Line \r\n                                chartsLineID=\"line1\"\r\n                                titleText = \"当日24小时拥堵指数变化\" \r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={this.state.extraInfoSwitch === 2 ? 8 : 0} >\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Descriptions\r\n                                    title=\"道路信息\"\r\n                                    layout=\"horizontal\"\r\n                                    bordered\r\n                                    column={1}\r\n                                    size='default'\r\n                                >\r\n                                    <Descriptions.Item label=\"道路名称\">中关村东路</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"道路方向\">由北向南</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"时间\">2015-09-01 09:12:11</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"平均通行速度\">45km/h</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"预计通行时间\" >32min</Descriptions.Item>\r\n                                </Descriptions>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[16, 4]}>\r\n                            <Col span={24}>\r\n                                <Line \r\n                                    chartsLineID=\"line2\"\r\n                                    titleText = \"24小时平均时速变化\"\r\n                                    data = {{}}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={this.state.extraInfoSwitch === 3 ? 8 : 0} >\r\n                        <h3>point wise</h3>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Analysis;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, PageHeader, message, Slider, Select, Descriptions, Popover } from 'antd';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport MapBoxPointsVis from '../../common/MapBoxPointsVis'\r\nimport { dataStr_dataObj, dataObj_dataStr, loadDataList, throttle, debounce } from '../../common/apis';\r\nimport './PredictionAnalysis.css';\r\nimport { inject, observer } from 'mobx-react';\r\nimport echarts from 'echarts';\r\n// import {predictCompareStore} from \"../../store/index\";\r\nconst { Option } = Select;\r\n@inject('store')\r\n@observer\r\nclass PredictionAnalysis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.store = props.store.predictCompareStore\r\n        // console.log(this.store.data)\r\n        this.state = {\r\n            // 模拟数据\r\n            dataPred: {\r\n                data: [\r\n                ],\r\n                datatime: ''\r\n            },\r\n            dataGt: {\r\n                data: [\r\n                ],\r\n                datatime: ''\r\n            },\r\n            titleTextLeft: \"\",\r\n            titleTextRight: \"\",\r\n            mapParam: {\r\n                // Mapbox 地图样式 style\r\n                style: 'mapbox://styles/mapbox/outdoors-v11',\r\n                center: [116.368608, 39.901744],\r\n                // Mapbox 地图的缩放等级\r\n                zoom: 10,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: 0,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: 0,\r\n            },\r\n            marks: {\r\n\r\n            },\r\n            sliderDisplay: 'none', //此状态为Slider的display的取值\r\n            dataListIndex: 0, // 数据list的index\r\n            historyPredDataPath: './history_predictDataList/history_pred/lr_pred/', // 历史预测数据根路径\r\n\r\n            dataIndex: 0, // history数据的index值\r\n            predictType: 'lr', // history预测数据的预测模型类型\r\n\r\n        }\r\n\r\n        this.DataGtNameList = null // 真实数据的name list\r\n        this.DataPredNameList = null // 预测数据的name list\r\n\r\n\r\n        this.asyncMapParam = this.asyncMapParam.bind(this)\r\n        this.historyPredict_local = this.historyPredict_local.bind(this)\r\n        this.historyPredict_online = this.historyPredict_online.bind(this)\r\n        this.realTimePredice = this.realTimePredice.bind(this)\r\n        this.sliderOnChange_local = this.sliderOnChange_local.bind(this)\r\n        this.selectOnChange_local = this.selectOnChange_local.bind(this)\r\n        this.sliderOnChange_online = this.sliderOnChange_online.bind(this)\r\n        this.selectOnChange_online = this.selectOnChange_online.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onresize = () => {\r\n            echarts.init(document.getElementById(\"mapContainerLeft\")).resize();\r\n            echarts.init(document.getElementById(\"mapContainerRight\")).resize();\r\n        };\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('PredictionAnalysis Destory')\r\n        this.store.clearAll()\r\n    }\r\n\r\n    asyncMapParam(positionParam) {\r\n        // console.log(positionParam)\r\n        this.setState({\r\n            ...this.state,\r\n            mapParam: positionParam,\r\n        })\r\n    }\r\n\r\n\r\n    // 可弃置\r\n    // 加载历史对比数据按钮点击事件 本地local数据 \r\n    historyPredict_local() {\r\n        let startTimeStr = \"2019-04-02_08-30\"\r\n        let endTimeStr = \"2019-04-02_08-39\"\r\n        this.DataGtNameList = loadDataList(startTimeStr, endTimeStr)\r\n        this.DataPredNameList = loadDataList(startTimeStr, endTimeStr)\r\n\r\n        let pathGt = './history_predictDataList/history_gt/' + this.DataGtNameList[0]\r\n        let pathPred = this.state.historyPredDataPath + this.DataPredNameList[0]\r\n        this.store.loaddata(pathGt, 'gt')\r\n        this.store.loaddata(pathPred, 'pred')\r\n\r\n        let sliderMarks = {}\r\n        for (let index = 0; index < this.DataGtNameList.length; index++) {\r\n            const element = this.DataGtNameList[index];\r\n            // sliderMarks[index] = element.split('.')[0]\r\n            sliderMarks[index] = {\r\n                style: {\r\n                    // color: '#1890ff',\r\n                    width: '120px'\r\n                },\r\n                label: <span>{element.split('.')[0].split('_')[1].split('-').join(':')}</span>\r\n            }\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            marks: sliderMarks,\r\n            sliderDisplay: 'block',\r\n            titleTextLeft: \"真实拥堵情况\",\r\n            titleTextRight: \"拥堵预测情况 LR模型\",\r\n        })\r\n    }\r\n\r\n    // 加载历史对比数据按钮点击事件 online数据 \r\n    historyPredict_online() {\r\n        let startTimeStr = \"2019-04-02_08-30\"\r\n        let endTimeStr = \"2019-04-02_08-39\"\r\n        this.DataGtNameList = loadDataList(startTimeStr, endTimeStr)\r\n        let sliderMarks = {}\r\n        for (let index = 0; index < this.DataGtNameList.length; index++) {\r\n            const element = this.DataGtNameList[index];\r\n            // sliderMarks[index] = element.split('.')[0]\r\n            sliderMarks[index] = {\r\n                style: {\r\n                    // color: '#1890ff',\r\n                    width: '120px'\r\n                },\r\n                label: <span>{element.split('.')[0].split('_')[1].split('-').join(':')}</span>\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            marks: sliderMarks,\r\n            sliderDisplay: 'block',\r\n            titleTextLeft: \"真实拥堵情况\",\r\n            titleTextRight: \"拥堵预测情况 LR模型\",\r\n            dataIndex: 0, // history数据的index值\r\n            predictType: 'lr', // history预测数据的预测模型类型\r\n        }, () => {\r\n            let historyGtQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n            }\r\n            let historyPredQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n                predictType: this.state.predictType,\r\n            }\r\n            this.store.getHistoryGt(historyGtQueryParam);\r\n            this.store.getHistoryPred(historyPredQueryParam);\r\n        })\r\n\r\n    }\r\n\r\n    realTimePredice() {\r\n        // message.warning('正在开发中');\r\n        this.setState({\r\n            ...this.state,\r\n            sliderDisplay: 'none',\r\n            titleTextLeft: \"LR模型预测\",\r\n            titleTextRight: \"SAGE模型预测\",\r\n        }, () => {\r\n            this.store.getPredLr()\r\n            this.store.getPredSage()\r\n        })\r\n    }\r\n\r\n    // 改变slider的值\r\n    // 从public本地数据中加载预测的数据和真实数据\r\n    sliderOnChange_local(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            dataListIndex: value\r\n        }, () => {\r\n            let pathGt = './history_predictDataList/history_gt/' + this.DataGtNameList[value]\r\n            let pathPred = this.state.historyPredDataPath + this.DataGtNameList[value]\r\n            this.store.loaddata(pathGt, 'gt')\r\n            this.store.loaddata(pathPred, 'pred')\r\n        })\r\n    }\r\n    // 加载后台生成的模型预测数据和真实数据\r\n    sliderOnChange_online(value) {\r\n        // console.log(value)\r\n        this.setState({\r\n            ...this.state,\r\n            dataIndex: value,\r\n        }, () => {\r\n            let historyGtQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n            }\r\n            let historyPredQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n                predictType: this.state.predictType,\r\n            }\r\n            this.store.getHistoryGt(historyGtQueryParam);\r\n            this.store.getHistoryPred(historyPredQueryParam);\r\n        })\r\n    }\r\n\r\n    // 切换预测模型\r\n    // 从public本地数据中加载预测的数据\r\n    selectOnChange_local(value) {\r\n        let predPath = this.state.historyPredDataPath\r\n        if (value === 'lr') {\r\n            predPath = './history_predictDataList/history_pred/lr_pred/'\r\n        }\r\n        else if (value === 'sage') {\r\n            predPath = './history_predictDataList/history_pred/sage_pred/'\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            titleTextRight: '拥堵预测情况 ' + value + '模型',\r\n            historyPredDataPath: predPath,\r\n        }, () => {\r\n            let pathPred = this.state.historyPredDataPath + this.DataGtNameList[this.state.dataListIndex]\r\n            this.store.loaddata(pathPred, 'pred')\r\n        })\r\n    }\r\n    // 加载后台生成的模型预测数据\r\n    selectOnChange_online(value) {\r\n        // console.log(value)\r\n        this.setState({\r\n            ...this.state,\r\n            predictType: value,\r\n            titleTextRight: '拥堵预测情况 ' + value + '模型',\r\n        }, () => {\r\n            let historyPredQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n                predictType: this.state.predictType,\r\n            }\r\n            this.store.getHistoryPred(historyPredQueryParam);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row gutter={[16, 0]}>\r\n                    <Col span={24}>\r\n                        <PageHeader\r\n                            ghost={false}\r\n                            onBack={() => window.history.back()}\r\n                            title=\"交通拥堵预测对比\"\r\n                            // subTitle=\"交通拥堵\"\r\n                            extra={[\r\n                                <Button\r\n                                    key=\"1\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.historyPredict_online}\r\n                                    loading={this.store.loading}\r\n                                >\r\n                                    加载历史预测对比数据\r\n                                </Button>,\r\n                                <Button\r\n                                    key=\"2\"\r\n                                    type=\"primary\"\r\n                                    onClick={throttle(this.realTimePredice, 1000)}\r\n                                    loading={this.store.loading}\r\n                                >\r\n                                    交通拥堵预测模型对比\r\n                                </Button>,\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row align={\"middle\"} justify={\"center\"} gutter={[24, 4]}>\r\n                    <Col span={16} >\r\n                        <Slider\r\n                            min={0}\r\n                            max={this.DataGtNameList ? this.DataGtNameList.length - 1 : 0}\r\n                            marks={this.state.marks}\r\n                            value={this.state.dataIndex}\r\n                            included={false}\r\n                            step={null}\r\n                            defaultValue={0}\r\n                            tooltipPlacement={'bottom'}\r\n                            tooltipVisible={false}\r\n                            style={{ display: this.state.sliderDisplay }}\r\n                            onChange={this.sliderOnChange_online}\r\n                            disabled={this.store.loading}\r\n                        />\r\n                    </Col>\r\n                    <Col span={8} className=\"PredInfo\">\r\n                        <Descriptions\r\n                            // title=\"预测算法信息\"\r\n                            layout=\"vertical\"\r\n                            bordered={true}\r\n                            column={5}\r\n                            size=\"small\"\r\n                            style={{ display: this.state.sliderDisplay }}\r\n                        >\r\n                            <Descriptions.Item\r\n                                label=\"算法模型\"\r\n                            >\r\n                                {/* {this.state.predictType} */}\r\n                                <Select\r\n                                    defaultValue=\"lr\"\r\n                                    style={{ width: '100%', display: this.state.sliderDisplay }}\r\n                                    onChange={this.selectOnChange_online}\r\n                                    loading={this.store.loading}\r\n                                    disabled={this.store.loading}\r\n                                >\r\n                                    <Option value=\"lr\">LR</Option>\r\n                                    <Option value=\"sage\">SAGE</Option>\r\n                                </Select>\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>预测正确节点数占总数的比例</p>\r\n                                        </div>\r\n                                    }>\r\n                                        准确率\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.scorePrecision + '%'}\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>各类别准确率：</p>\r\n                                            <p>通畅准确率：{this.store.precisionClear+ '%'}</p>\r\n                                            <p>缓行准确率：{this.store.precisionSlow + '%'}</p>\r\n                                            <p>拥堵准确率：{this.store.precisionJam + '%'}</p>\r\n                                            <p>非通畅准确率：{this.store.precisionSlowJam+ '%'}</p>\r\n                                        </div>\r\n                                    }>\r\n                                        拥堵准确率\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.precisionJam + '%'}\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>平均绝对误差</p>\r\n                                        </div>\r\n                                    }>\r\n                                        MAE\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.scoreMAE}\r\n                            </Descriptions.Item>\r\n\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>平均绝对百分比误差</p>\r\n                                        </div>\r\n                                    }>\r\n                                        MAPE\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.scoreMAPE + '%'}\r\n                            </Descriptions.Item>\r\n                            \r\n                        </Descriptions>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    gutter={[16, 4]}\r\n                >\r\n                    <Col span={12} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainerLeft\"\r\n                            titleText={this.state.titleTextLeft}\r\n                            chartsParam={\r\n                                { mapParam: this.state.mapParam }\r\n                            }\r\n                            data={this.store.dataLeft}\r\n                            asyncParam={this.asyncMapParam}\r\n                        />\r\n                    </Col>\r\n                    <Col span={12} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainerRight\"\r\n                            titleText={this.state.titleTextRight}\r\n                            chartsParam={\r\n                                { mapParam: this.state.mapParam }\r\n                            }\r\n                            data={this.store.dataRight}\r\n                            asyncParam={this.asyncMapParam}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PredictionAnalysis;","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\n\r\nimport './BasicLayout.css';\r\n\r\nimport {\r\n    HomeOutlined,\r\n    DesktopOutlined,\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n    BorderOutlined,\r\n    BlockOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport Home from '../pages/home/Home';\r\nimport Analysis from '../pages/analysis/Analysis';\r\nimport PredictionAnalysis from '../pages/prediction/PredictionAnalysis';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n// 面包屑名称和icon的map\r\nconst breadcrumbMap = {\r\n    '/analysis': {\r\n        icon: <BorderOutlined />,\r\n        name: 'Analysis',\r\n    },\r\n    '/prediction': {\r\n        icon: <BlockOutlined />,\r\n        name: 'Prediction',\r\n    },\r\n    '/team': {\r\n        icon: <TeamOutlined />,\r\n        name: 'Team',\r\n    },\r\n    '/team/1': {\r\n        icon: <UserOutlined />,\r\n        name: 'Team1',\r\n    },\r\n};\r\n\r\n// route 等价于 <Route path=\"/\" exact component={Home} />\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: \"/analysis\",\r\n        exact: true,\r\n        component: Analysis\r\n    },\r\n    {\r\n        path: \"/prediction\",\r\n        exact: true,\r\n        component: PredictionAnalysis\r\n    },\r\n]\r\n\r\nclass BasicLayout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false,\r\n        }\r\n    }\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getBreadcrumbItems() {\r\n        const { location } = this.props;\r\n        const pathSnippets = location.pathname.split('/').filter(i => i);\r\n\r\n        const extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n            const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\r\n            return (\r\n                <Breadcrumb.Item key={url}>\r\n                    {breadcrumbMap[url].icon}\r\n                    <Link to={url}>{breadcrumbMap[url].name}</Link>\r\n                </Breadcrumb.Item>\r\n            );\r\n        });\r\n        const breadcrumbItems = [\r\n            <Breadcrumb.Item key=\"home\">\r\n                <HomeOutlined />\r\n                <Link to=\"/\">Home</Link>\r\n            </Breadcrumb.Item>,\r\n        ].concat(extraBreadcrumbItems);\r\n\r\n        return breadcrumbItems\r\n    }\r\n\r\n    render() {\r\n        const BreadcrumbItems = this.getBreadcrumbItems()\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider\r\n                    // collapsible\r\n                    // collapsed={this.state.collapsed}\r\n                    // onCollapse={this.onCollapse}\r\n                    width={150}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\"\r\n                    >\r\n                        {/* <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n                            <Link to=\"/\">首页</Link>\r\n                        </Menu.Item> */}\r\n                        <Menu.Item key=\"2\" icon={<BorderOutlined />}>\r\n                            <Link to=\"/analysis\">可视分析</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" icon={<BlockOutlined />}>\r\n                            <Link to=\"/prediction\">预测分析</Link>\r\n                        </Menu.Item>\r\n                        {/* <Menu.Item key=\"4\" icon={<TeamOutlined />}>\r\n                            <Link to=\"/team\">团队介绍</Link>\r\n                        </Menu.Item>\r\n                        <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\r\n                            <Menu.Item key=\"6\">\r\n                                <Link to=\"/team/1\">Team 1</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n                        </SubMenu> */}\r\n                        {/* <Menu.Item key=\"9\" icon={<FileOutlined />} >others</Menu.Item> */}\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout className=\"site-layout\" style={{ marginLeft: 150 }}>\r\n                    <Header className=\"site-layout-background header-title\" style={{ padding: 0 }} >交通数据可视化分析系统</Header>\r\n                    <Content style={{ margin: '0 16px', overflow: 'initial' }}>\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            {BreadcrumbItems}\r\n                        </Breadcrumb>\r\n                        <div id=\"site-layout-content\" className=\"site-layout-background site-layout-content\">\r\n                            {\r\n                                routes.map((route, index) => {\r\n                                    return <Route key={index} path={route.path} exact={route.exact} component={route.component} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Traffic Vis System ©2020 Created by STDAL</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BasicLayout);","import axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nconst service = axios.create({\r\n    baseURL: 'http://39.105.230.32:5000/',  // 线上环境\r\n    // baseURL: 'http://127.0.0.1:5000/',  // 本地测试环境\r\n    timeout: 120*1000,\r\n    withCredentials:true, // 允许携带cookies\r\n})\r\n\r\nservice.interceptors.response.use(\r\n    response => {\r\n        // console.log(response)\r\n        return response.data\r\n    },\r\n    error => {\r\n        console.log('error', error, error.response)\r\n        let response = error.response;\r\n        if(response === undefined){\r\n            message.error('undefined 加载后台数据出错');\r\n        }\r\n        else{\r\n            let errmessage = [response.status,response.statusText].join(',')\r\n            message.error('错误信息:' + errmessage)\r\n        }\r\n    }\r\n)\r\n\r\nexport default service","import {action, observable} from 'mobx';\r\nimport {message} from 'antd';\r\nimport request from '../common/service'\r\nimport qs from 'qs';\r\nimport {processJsonData} from '../common/apis'\r\n\r\nclass PredictCompareStore {\r\n\r\n    @observable dataLeft = []; // 左边地图数据\r\n    @observable dataRight = []; // 右边地图的数据\r\n    @observable loading = false; // loading状态\r\n\r\n    @observable scorePrecision = 0; // 准确率\r\n    @observable scoreMAE = 0; // 平均绝对误差\r\n    @observable scoreMAPE = 0; // 平均绝对百分比误差\r\n    @observable precisionClear = 0; // 通畅准确率\r\n    @observable precisionSlow = 0; // 缓行准确率\r\n    @observable precisionJam = 0; // 拥堵准确率\r\n    @observable precisionSlowJam = 0; // 缓行和拥堵的准确率\r\n    \r\n    // 可弃置\r\n    // 根据本地json数据的路径加载history的gt和pred数据 \r\n    @action async loaddata(jsonPath,type) {\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let response = await fetch(jsonPath)\r\n        let resData = await response.json();\r\n        resData = resData.data\r\n        if (resData === undefined) {\r\n            message.warning('获取数据失败');\r\n        }\r\n        else {\r\n            resData = processJsonData(resData)\r\n            data.data = resData\r\n            data.datatime = jsonPath.split('/')[jsonPath.split('/').length - 1].split('.')[0]\r\n        }\r\n        \r\n        if(type === 'gt'){\r\n            this.dataLeft = data\r\n        }\r\n        else if(type === 'pred'){\r\n            this.dataRight = data\r\n        }\r\n        else{\r\n            message.warning('loaddata param error');\r\n        }\r\n    }\r\n\r\n    // 加载history的拥堵GroundTruth数据\r\n    @action async getHistoryGt(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/history/gt' + '?' + qs.stringify(param))\r\n        this.loading = false;\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let data = {\r\n                data: [],\r\n                datatime: ''\r\n            } \r\n            let resData = res.data\r\n            resData = processJsonData(resData) \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataLeft = data\r\n            console.log(res)\r\n        }\r\n\r\n    }\r\n    // 加载history的拥堵预测数据\r\n    @action async getHistoryPred(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/history/pred' + '?' + qs.stringify(param))\r\n        this.loading = false;\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let data = {\r\n                data: [],\r\n                datatime: ''\r\n            } \r\n            let resData = res.data\r\n            resData = processJsonData(resData) \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataRight = data\r\n            this.scorePrecision = res.scorePrecision\r\n            this.scoreMAE = res.scoreMAE\r\n            this.scoreMAPE = res.scoreMAPE\r\n            this.precisionClear = res.precisionClear\r\n            this.precisionSlow = res.precisionSlow\r\n            this.precisionJam = res.precisionJam\r\n            this.precisionSlowJam = res.precisionSlowJam\r\n            console.log(res)\r\n        }\r\n    }\r\n    \r\n    // 加载实时的拥堵预测数据\r\n    // Lr方法\r\n    @action async getPredLr(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/predict/lr')\r\n        this.loading = false;\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let resData = res.data\r\n            resData = processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataLeft = data\r\n            console.log(res)\r\n        }\r\n    }\r\n    // Sage方法\r\n    @action async getPredSage(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/predict/sage')\r\n        this.loading = false;\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let resData = res.data\r\n            resData = processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataRight = data\r\n            console.log(res)\r\n        }\r\n    }\r\n\r\n    // 清理数据 \r\n    @action async clearAll(){\r\n        this.dataLeft = []; // 左边地图数据\r\n        this.dataRight = []; // 右边地图的数据\r\n    }\r\n}\r\n\r\n\r\nconst predictCompareStore = new PredictCompareStore();\r\nexport default predictCompareStore;","import predictCompareStore from './predictCompareStore';\r\nimport analysisStore from './analysisStore';\r\n\r\nconst store = {\r\n    analysisStore,\r\n    predictCompareStore,\r\n}\r\nexport default store;","import {action, observable} from 'mobx';\r\nimport {message} from 'antd';\r\nimport request from '../common/service'\r\nimport {processJsonData} from '../common/apis'\r\n\r\n\r\nclass AnalysisStore {\r\n    @observable dataGt = []; // 实时的真实数据\r\n    @observable loading = false; // loading状态\r\n\r\n    // 加载实时拥堵数据\r\n    @action async getRealTimeData(param){\r\n        this.loading = true\r\n        const res = await request.get('data')\r\n        this.loading = false\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let resData = res.data\r\n            resData = processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataGt = data\r\n            console.log(res)\r\n        }\r\n    }\r\n\r\n    // 清理数据 \r\n    @action async clearAll(){\r\n        this.dataGt = [];\r\n    }\r\n}\r\n\r\n\r\nconst analysisStore = new AnalysisStore();\r\nexport default analysisStore;","import React from 'react';\r\nimport BasicLayout from './layouts/BasicLayout';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'mobx-react'\r\nimport store from './store/index'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <BasicLayout />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>\r\n  <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}