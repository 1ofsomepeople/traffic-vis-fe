{"version":3,"sources":["common/apis.js","common/EchartsMapBoxVis.js","pages/home/Home.js","common/MapBoxPointsVis.js","pages/analysis/Analysis.js","pages/prediction/PredictionAnalysis.js","layouts/BasicLayout.js","common/service.js","store/index.js","store/predictCompareStore.js","App.js","serviceWorker.js","index.js"],"names":["dataStr_dataObj","dataStr","dataArr","split","concat","parseInt","loadDataList","startTimeStr","endTimeStr","dataObj","DataNameList","timeIndex","push","timeIndexObj","String","slice","throttle","fn","delay","prev","Date","now","context","this","arg","arguments","apply","debounce","timer","clearTimeout","setTimeout","EchartsMapBoxVis","props","move_fly","mapbox","lon","lat","zoom","pitch","bearing","duration","nowMapParam","getZoom","center","getCenter","lng","getBearing","getPitch","easeTo","maxDuration","easing","t","animate","showmapbox","data","datatime","mapboxgl","accessToken","myChartGl","echarts","init","document","getElementById","mapContainerID","setOption","title","text","state","titleText","padding","subtext","subtextStyle","color","fontStyle","fontWeight","fontFamily","fontSize","visualMap","type","categories","show","calculable","realtime","hoverLink","left","bottom","dimension","pieces","value","label","min","max","mapbox3D","mapParam","style","series","coordinateSystem","shading","minHeight","maxHeight","barSize","silent","getModel","getComponent","getMapbox","setMinZoom","setMaxZoom","addControl","NavigationControl","showZoom","showCompass","visualizePitch","ScaleControl","maxWidth","unit","on","zoomLevel","asyncParam","chartsParam","window","bind","onresize","resize","newOption","flyActionParam","console","log","id","className","height","width","Component","Home","span","Analysis","inject","observer","store","predictCompareStore","dataType","dataListIndex","isplaying","loaddata","onClickBtn1","onClickBtn2","onClickBtn3","onClickBtn4","onClickBtn5","onClickBtn6","jsonPath","fetch","response","json","undefined","resData","message","warning","i","len","length","setState","intervalID","setInterval","path","clearInterval","timeoutID","intervalPlay","getRealTimeData","clearAll","gutter","ghost","onBack","history","back","extra","key","onClick","dataGt","Option","Select","PredictionAnalysis","dataPred","titleTextLeft","titleTextRight","marks","sliderDisplay","historyPredDataPath","DataGtNameList","DataPredNameList","asyncMapParam","historyPredict","realTimePredice","sliderOnChange","selectOnChange","positionParam","pathGt","pathPred","sliderMarks","index","element","join","getPredLr","getPredSage","predPath","align","justify","included","step","defaultValue","tooltipPlacement","tooltipVisible","display","onChange","dataPredLr","dataPredSage","Header","Layout","Content","Footer","Sider","SubMenu","Menu","breadcrumbMap","icon","BorderOutlined","name","BlockOutlined","TeamOutlined","UserOutlined","routes","exact","component","BasicLayout","onCollapse","collapsed","pathSnippets","location","pathname","filter","extraBreadcrumbItems","map","_","url","Item","to","HomeOutlined","BreadcrumbItems","getBreadcrumbItems","overflow","position","theme","defaultSelectedKeys","mode","FileOutlined","marginLeft","margin","route","textAlign","withRouter","service","axios","create","baseURL","timeout","withCredentials","interceptors","use","error","errmessage","status","statusText","processJsonData","param","request","get","res","jsonName","dataGtRT","observable","action","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8d2649db.chunk.js","sourcesContent":["\r\nfunction dataStr_dataObj(dataStr) {\r\n    let dataArr = dataStr.split('_')[0].split('-').concat(dataStr.split('_')[1].split('-'))\r\n    let resObj = {\r\n        'year': parseInt(dataArr[0]),\r\n        'month': parseInt(dataArr[1]),\r\n        'day': parseInt(dataArr[2]),\r\n        'hour': parseInt(dataArr[3]),\r\n        'minute': parseInt(dataArr[4]),\r\n    }\r\n    return resObj\r\n};\r\n\r\nfunction dataObj_dataStr(dataObj) {\r\n    return String(dataObj['year']) + '-' + ('0' + String(dataObj['month'])).slice(-2) + '-' + ('0' + String(dataObj['day'])).slice(-2) + '_' + ('0' + String(dataObj['hour'])).slice(-2) + '-' + ('0' + String(dataObj['minute'])).slice(-2)\r\n};\r\n\r\n// load datalist\r\nfunction loadDataList(startTimeStr,endTimeStr){\r\n    let DataNameList = []\r\n    // let startTimeStr = \"2019-04-02_08-30\"\r\n    // let endTimeStr = \"2019-04-02_09-30\"\r\n\r\n    let timeIndex = startTimeStr\r\n    while (timeIndex <= endTimeStr) {\r\n        DataNameList.push(timeIndex + '.json')\r\n\r\n        let timeIndexObj = dataStr_dataObj(timeIndex)\r\n\r\n        if (timeIndexObj['minute'] + 1 > 59) {\r\n            timeIndexObj['minute'] = 0\r\n            timeIndexObj['hour'] += 1\r\n        }\r\n        else {\r\n            timeIndexObj['minute'] += 1\r\n        }\r\n        timeIndex = dataObj_dataStr(timeIndexObj)\r\n    }\r\n    return DataNameList\r\n    \r\n}\r\n\r\nfunction eqArr(a, b) {\r\n    // 判断数组的长度\r\n    if (a.length !== b.length) {\r\n        return false\r\n    } else {\r\n        // 循环遍历数组的值进行比较\r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n// 4. 节流函数\r\n// 思路：在规定时间内只触发一次\r\nfunction throttle(fn, delay) {\r\n    // 利用闭包保存时间\r\n    let prev = Date.now()\r\n    return function () {\r\n        let context = this\r\n        let arg = arguments\r\n        let now = Date.now()\r\n        if (now - prev >= delay) {\r\n            fn.apply(context, arg)\r\n            prev = Date.now()\r\n        }\r\n    }\r\n}\r\n// 5. 防抖函数\r\n// 思路:在规定时间内未触发第二次，则执行\r\nfunction debounce(fn, delay) {\r\n    // 利用闭包保存定时器\r\n    let timer = null\r\n    return function () {\r\n        let context = this\r\n        let arg = arguments\r\n        // 在规定时间内再次触发会先清除定时器后再重设定时器\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            fn.apply(context, arg)\r\n        }, delay)\r\n    }\r\n}\r\n\r\nexport {dataStr_dataObj, dataObj_dataStr, loadDataList, eqArr, throttle, debounce}","import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nimport './EchartsMapBoxVis.css'\r\nimport { eqArr } from './apis';\r\n\r\n\r\nclass EchartsMapBoxVis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            titleText: this.props.chartsParam.titleText ? this.props.chartsParam.titleText : ' ',\r\n            mapParam: this.props.chartsParam.mapParam ? this.props.chartsParam.mapParam : null,\r\n        }\r\n        this.myChartGl = null // echarts对象实例\r\n        this.mapbox = null // mapbox对象实例\r\n        window.mapboxgl = mapboxgl;\r\n        setTimeout(() => {\r\n            this.showmapbox(this.props.data.data, this.props.data.datatime);\r\n        })\r\n        this.asyncParam = {\r\n            center: [116.368608, 39.901744],\r\n            // Mapbox 地图的缩放等级\r\n            zoom: 10,\r\n            // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n            pitch: 60,\r\n            // Mapbox 地图的旋转角度\r\n            bearing: -30,\r\n        }\r\n\r\n        this.showmapbox = this.showmapbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // window.mapboxgl = mapboxgl;\r\n        window.onresize = () => {\r\n            this.myChartGl.resize()\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        let data = this.props.data.data\r\n        let datatime = this.props.data.datatime\r\n        let asyncParam = this.props.asyncParam ? this.props.chartsParam.mapParam : null\r\n\r\n        let newOption = {\r\n            title: {\r\n                text: this.props.titleText,\r\n                subtext: datatime ? datatime : '',\r\n            },\r\n            series: [{\r\n                data: data ? data : [],\r\n                barSize: (2 ** (this.mapbox.getZoom() - 10) * 0.1),\r\n            }],\r\n        }\r\n        if (asyncParam) {\r\n            newOption.mapbox3D = {\r\n                center: asyncParam.center,\r\n                zoom: asyncParam.zoom,\r\n                pitch: asyncParam.pitch,\r\n                bearing: asyncParam.bearing,\r\n            }\r\n        }\r\n        this.myChartGl.setOption(newOption)\r\n\r\n        let flyActionParam = this.props.flyActionParam\r\n        if (flyActionParam) {\r\n            this.move_fly(this.mapbox, ...flyActionParam);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('EchartsMapBoxVis Destory')\r\n        this.myChartGl = null // echarts对象实例\r\n        this.mapbox = null // mapbox对象实例\r\n        // window.mapboxgl = null\r\n    }\r\n\r\n    move_fly = (mapbox, lon, lat, zoom, pitch, bearing, duration) => {\r\n        this.nowMapParam = {\r\n            zoom: this.mapbox.getZoom(),\r\n            center: [this.mapbox.getCenter().lng, this.mapbox.getCenter().lat],\r\n            bearing: this.mapbox.getBearing(),\r\n            pitch: this.mapbox.getPitch()\r\n        }\r\n        if (lon !== this.nowMapParam.center[0] || lat !== this.nowMapParam.center[1] || zoom !== this.nowMapParam.zoom || pitch !== this.nowMapParam.pitch || bearing !== this.nowMapParam.bearing){\r\n            mapbox.easeTo({\r\n                // CameraOptions\r\n                center: [lon, lat],\r\n                zoom: zoom,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: pitch,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: bearing,\r\n    \r\n                // AnimationOptions\r\n                // 动态转换的持续时间，按毫秒计算\r\n                duration: duration,\r\n                maxDuration: duration,\r\n                // 该函数持续的时间在 0~1 之间， 返回一个表示状态的数字，初始状态为 0，最终状态为 1\r\n                easing(t) {\r\n                    return t;\r\n                    // return t*(2-t);\r\n                },\r\n                // If false , no animation will occur.\r\n                animate: true\r\n            });\r\n        }\r\n    };\r\n\r\n    showmapbox = (data = [], datatime = \"\") => {\r\n\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiaHVzdDEyIiwiYSI6ImNrM3BpbDhsYTAzbDgzY3J2OXBzdXFuNDMifQ.bDD9-o_SB4fR0UXzYLy9gg';\r\n\r\n        // echarts对象实例\r\n        this.myChartGl = echarts.init(document.getElementById(this.props.mapContainerID));\r\n\r\n        // let zoomeLevel = 11\r\n        // let barSize = (2 ** (zoomeLevel - 11)) * 0.08\r\n        this.myChartGl.setOption({\r\n            title: {\r\n                // text: '交通拥堵情况三维柱状图',\r\n                text: this.state.titleText,\r\n                padding: 20,//各个方向的内边距，默认是5，可以自行设置\r\n                subtext: datatime ? datatime : '', //\"2019-12-13 14:00\", //主标题的副标题文本内容，如果需要副标题就配置这一项\r\n                subtextStyle: {//副标题内容的样式\r\n                    color: 'black',\r\n                    fontStyle: 'normal',//主标题文字字体风格，默认normal，有italic(斜体),oblique(斜体)\r\n                    fontWeight: \"bold\",//可选normal(正常)，bold(加粗)，bolder(加粗)，lighter(变细)，100|200|300|400|500...\r\n                    fontFamily: \"san-serif\",//主题文字字体，默认微软雅黑\r\n                    fontSize: 16//主题文字字体大小，默认为12px\r\n                },\r\n            },\r\n            visualMap: {\r\n                type: 'piecewise', //分段型\r\n                categories: ['拥堵', '缓行', '通畅'],\r\n\r\n                // visualMap-continuous组件配置\r\n                show: true, //是否显示 visualMap-continuous 组件。如果设置为 false，不会显示，但是数据映射的功能还存在。\r\n                calculable: true, //是否显示拖拽用的手柄（手柄能拖拽调整选中范围）\r\n                realtime: true, //拖拽时，是否实时更新。\r\n                hoverLink: true,\r\n                left: 20,\r\n                bottom: 40,\r\n                dimension: 2, //指定用数据的『哪个维度』，映射到视觉元素上,默认取 data 中最后一个维度。\r\n                color: ['red', '#eac736', 'green'],\r\n                pieces: [\r\n                    { value: 150, label: '通畅', color: '#369674' }, // 表示value等于150的情况。\r\n                    { value: 175, label: '缓行', color: '#feb64d' },\r\n                    { value: 200, label: '拥堵', color: 'red' },\r\n                ],\r\n                min: 100,\r\n                max: 500,\r\n            },\r\n            // mapbox3D: {\r\n            //     // echarts-gl中mapbox只能应用部分配置，更多的mapbox配置要使用mapbox的api\r\n            //     // Mapbox 地图样式 style\r\n            //     style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            //     // Mapbox 地图中心经纬度,经纬度用数组表示\r\n            //     center: [116.368608, 39.901744],\r\n            //     // Mapbox 地图的缩放等级\r\n            //     zoom: 10,\r\n            //     // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n            //     pitch: 60,\r\n            //     // Mapbox 地图的旋转角度\r\n            //     bearing: -30,\r\n            // },\r\n            mapbox3D: this.state.mapParam ? this.state.mapParam : {\r\n                // echarts-gl中mapbox只能应用部分配置，更多的mapbox配置要使用mapbox的api\r\n                // Mapbox 地图样式 style\r\n                style: 'mapbox://styles/mapbox/outdoors-v11',\r\n                // Mapbox 地图中心经纬度,经纬度用数组表示\r\n                center: [116.368608, 39.901744],\r\n                // Mapbox 地图的缩放等级\r\n                zoom: 10,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: 60,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: -30,\r\n            },\r\n\r\n            series: [{\r\n                type: 'bar3D',\r\n                coordinateSystem: 'mapbox3D',\r\n                data: data ? data : [],\r\n                shading: 'color',\r\n                minHeight: 100,\r\n                maxHeight: 500,\r\n                barSize: 0.1,\r\n                // 图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。\r\n                silent: true, //设置为true 大大优化响应时间\r\n            }],\r\n\r\n        });\r\n\r\n        // 获取mapbox对象实例\r\n        this.mapbox = this.myChartGl.getModel().getComponent('mapbox3D').getMapbox();\r\n\r\n        // 设置mapbox的zoom范围\r\n        this.mapbox.setMinZoom(10);\r\n        this.mapbox.setMaxZoom(14);\r\n\r\n        // 添加缩放和指南针控件\r\n        this.mapbox.addControl(new mapboxgl.NavigationControl({\r\n            showZoom: true,\r\n            showCompass: true,\r\n            visualizePitch: true,\r\n        }), 'top-right');\r\n\r\n        // 添加比例尺控件\r\n        this.mapbox.addControl(new mapboxgl.ScaleControl({\r\n            maxWidth: 80,\r\n            unit: 'metric'\r\n        }), 'bottom-right');\r\n\r\n        // // 添加全屏控件 只能显示mapbox不能显示echarts\r\n        // this.mapbox.addControl(new mapboxgl.FullscreenControl({ \r\n        //     container: document.querySelector('mapbox_echartgl') }\r\n        // ));\r\n\r\n        // this.mapbox.on('load', function () {\r\n        //     console.log(\"地图加载\")\r\n        //     // window.mapboxgl = null;\r\n        // });\r\n\r\n        this.mapbox.on('mousemove', () => {\r\n            let zoomLevel = this.mapbox.getZoom()\r\n            let center = [this.mapbox.getCenter().lng, this.mapbox.getCenter().lat]\r\n            let bearing = this.mapbox.getBearing()\r\n            let pitch = this.mapbox.getPitch()\r\n\r\n            if (this.props.asyncParam) {\r\n                if (this.asyncParam.center[0] != center[0] || this.asyncParam.center[1] != center[1] || this.asyncParam.zoom != zoomLevel || this.asyncParam.bearing != bearing || this.asyncParam.pitch != pitch) {\r\n                    this.asyncParam.center = center\r\n                    this.asyncParam.zoom = zoomLevel\r\n                    this.asyncParam.bearing = bearing\r\n                    this.asyncParam.pitch = pitch\r\n                    this.props.asyncParam(this.asyncParam)\r\n                }\r\n            }\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <div id={this.props.mapContainerID} className=\"mapBoxContainer\" style={{ minHeight: \"600px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EchartsMapBoxVis;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport MapBoxPointsVis from '../../common/MapBoxPointsVis'\r\n\r\nimport './home.css';\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={6} className=\"positionLeft\">\r\n                        交通数据可视化\r\n                    </Col>\r\n                    <Col span={18} className=\"positionRight\">\r\n                        {/* <MapBoxPointsVis mapContainerID=\"homeBar1\"/> */}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={18} className=\"positionLeft\">\r\n                        \r\n                    </Col>\r\n                    <Col span={6} className=\"positionRight\">\r\n                        拥堵分析\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={6} className=\"positionLeft\">\r\n                        实时预测\r\n                    </Col>\r\n                    <Col span={18} className=\"positionRight\">\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nclass MapBoxPointsVis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.map = null;\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiaHVzdDEyIiwiYSI6ImNrM3BpbDhsYTAzbDgzY3J2OXBzdXFuNDMifQ.bDD9-o_SB4fR0UXzYLy9gg';\r\n        \r\n    }\r\n\r\n    showMap(){\r\n        this.map = new mapboxgl.Map({\r\n            container: this.props.mapContainerID,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            zoom: 10,\r\n            center: [116.368608, 39.901744],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.showMap();\r\n        window.onresize = () => {\r\n            this.map.resize()\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <div id={this.props.mapContainerID} style={{ minHeight: \"600px\",height:\"100%\" }}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MapBoxPointsVis;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, PageHeader, message } from 'antd';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport { dataStr_dataObj, dataObj_dataStr, loadDataList, throttle, debounce } from '../../common/apis';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport './Analysis.css'\r\n\r\n\r\n@inject('store')\r\n@observer\r\nclass Analysis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.store = props.store.predictCompareStore\r\n        this.state = {\r\n            // 模拟数据\r\n            data: {\r\n                data: [\r\n                    [116.368608, 39.901744, 150],\r\n                    [116.378608, 39.901744, 350],\r\n                    [116.388608, 39.901744, 500],\r\n                ],\r\n                datatime: ''\r\n            },\r\n            dataType:'history',\r\n            chartsParam: {\r\n                titleText: \"交通拥堵情况三维柱状图\",\r\n            }\r\n        }\r\n        this.DataNameList = null // 轮播的数据name list\r\n        this.dataListIndex = 0 // 遍历数据list的index\r\n        this.isplaying = false // 数据是否正在轮播\r\n\r\n        this.loaddata = this.loaddata.bind(this)\r\n        this.onClickBtn1 = this.onClickBtn1.bind(this)\r\n        this.onClickBtn2 = this.onClickBtn2.bind(this)\r\n        this.onClickBtn3 = this.onClickBtn3.bind(this)\r\n        this.onClickBtn4 = this.onClickBtn4.bind(this)\r\n        this.onClickBtn5 = this.onClickBtn5.bind(this)\r\n        this.onClickBtn6 = this.onClickBtn6.bind(this)\r\n    };\r\n\r\n    // 加载数据\r\n    async loaddata(jsonPath) {\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let response = await fetch(jsonPath)\r\n        let resData = await response.json();\r\n        resData = resData.data\r\n        if (resData === undefined) {\r\n            message.warning('获取数据失败');\r\n        }\r\n        else {\r\n            // console.log(resData)\r\n            // 数据处理\r\n            for (let i = 0, len = resData.length; i < len; i++) {\r\n                // 数据映射 1->1 3->150 7-175 10->200\r\n                switch (resData[i][2]) {\r\n                    case 3:\r\n                        resData[i][2] = 150;\r\n                        break;\r\n                    case 7:\r\n                        resData[i][2] = 175;\r\n                        break;\r\n                    case 10:\r\n                        resData[i][2] = 200;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            data.data = resData\r\n            data.datatime = jsonPath.split('/')[jsonPath.split('/').length - 1].split('.')[0]\r\n        }\r\n        this.setState({\r\n            data: data,\r\n            dataType:'history',\r\n        })\r\n        return data\r\n    }\r\n\r\n\r\n\r\n    intervalPlay(DataNameList) {\r\n        this.intervalID = setInterval(() => {\r\n            let path = './testDataList/' + DataNameList[this.dataListIndex > DataNameList.length ? this.dataListIndex = 0 : this.dataListIndex++]\r\n            this.loaddata(path)\r\n        }, 500)\r\n    }\r\n\r\n    // 加载测试数据\r\n    onClickBtn1() {\r\n        this.loaddata(\"./2019-04-02_09-00.json\")\r\n    }\r\n    // 数据轮播\r\n    onClickBtn2() {\r\n        // this.setState({\r\n        //     ...this.state,\r\n        //     flyActionParam: null\r\n        // })\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            clearTimeout(this.timeoutID)\r\n            this.intervalID = null\r\n            this.isplaying = false\r\n        }\r\n        else {\r\n            this.isplaying = true\r\n\r\n            let startTimeStr = \"2019-04-02_08-30\"\r\n            let endTimeStr = \"2019-04-02_09-30\"\r\n            this.DataNameList = loadDataList(startTimeStr,endTimeStr)\r\n            this.intervalPlay(this.DataNameList)\r\n        }\r\n    }\r\n    onClickBtn3() {\r\n        // message.warning('正在开发中');\r\n        this.store.getRealTimeData()\r\n        this.setState({\r\n            ...this.state,\r\n            dataType: 'realtime',\r\n        })\r\n    }\r\n    // 局部展示\r\n    onClickBtn4() {\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            this.intervalID = null\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.360163, 40.001514, 14, 60, -45, 1000]\r\n        }, () => {\r\n            if (this.DataNameList && this.isplaying) {\r\n                this.timeoutID = setTimeout(() => {\r\n                    this.intervalPlay(this.DataNameList)\r\n                    this.setState({\r\n                        ...this.state,\r\n                        flyActionParam: null\r\n                    })\r\n                }, 2000)\r\n            }\r\n\r\n        })\r\n    }\r\n    // 全局展示\r\n    onClickBtn5() {\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            this.intervalID = null\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.420608, 39.851744, 11.5, 60, -30, 1000]\r\n        }, () => {\r\n            if (this.DataNameList && this.isplaying) {\r\n                this.timeoutID = setTimeout(() => {\r\n                    this.intervalPlay(this.DataNameList)\r\n                    this.setState({\r\n                        ...this.state,\r\n                        flyActionParam: null\r\n                    })\r\n                }, 2000)\r\n            }\r\n        })\r\n    }\r\n    // 地图重置\r\n    onClickBtn6() {\r\n        this.setState({\r\n            data: {\r\n                data: [],\r\n                datatime: ''\r\n            },\r\n            flyActionParam: [116.368608, 39.901744, 10, 60, -30, 1000]\r\n        })\r\n        clearInterval(this.intervalID);\r\n        clearTimeout(this.timeoutID)\r\n        this.timeoutID = null\r\n        this.intervalID = null\r\n        this.DataNameList = null\r\n        this.dataListIndex = 0\r\n    }\r\n    componentDidMount() {\r\n\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        console.log('Analysis Destory')\r\n        this.store.clearAll()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row gutter={[16, 0]}>\r\n                    <Col span={24}>\r\n                        <PageHeader\r\n                            ghost={false}\r\n                            onBack={() => window.history.back()}\r\n                            title=\"交通拥堵可视化分析\"\r\n                            // subTitle=\"交通拥堵\"\r\n                            extra={[\r\n                                <Button\r\n                                    key=\"1\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.onClickBtn1}>测试数据</Button>,\r\n                                <Button\r\n                                    key=\"2\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn2, 500)}\r\n                                >数据轮播</Button>,\r\n                                <Button \r\n                                    key=\"3\" \r\n                                    type=\"primary\" \r\n                                    onClick={debounce(this.onClickBtn3, 500)}\r\n                                >实时交通</Button>,\r\n                                <Button\r\n                                    key=\"4\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn4, 500)}\r\n                                >局部演示</Button>,\r\n                                <Button\r\n                                    key=\"5\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn5, 500)}\r\n                                >全局演示</Button>,\r\n                                <Button\r\n                                    key=\"6\"\r\n                                    onClick={this.onClickBtn6}>地图重置</Button>,\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[16, 4]}>\r\n                    <Col span={24} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis \r\n                            mapContainerID=\"mapContainer\" \r\n                            chartsParam={this.state.chartsParam} \r\n                            data={this.state.dataType === 'history'? this.state.data : this.store.dataGt} \r\n                            flyActionParam={this.state.flyActionParam} \r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Analysis;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, PageHeader, message, Slider, Select } from 'antd';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport MapBoxPointsVis from '../../common/MapBoxPointsVis'\r\nimport { dataStr_dataObj, dataObj_dataStr, loadDataList, throttle, debounce } from '../../common/apis';\r\nimport './PredictionAnalysis.css';\r\nimport { inject, observer } from 'mobx-react';\r\n// import {predictCompareStore} from \"../../store/index\";\r\nconst { Option } = Select;\r\n@inject('store')\r\n@observer\r\nclass PredictionAnalysis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.store = props.store.predictCompareStore\r\n        // console.log(this.store.data)\r\n        this.state = {\r\n            // 模拟数据\r\n            dataPred: {\r\n                data: [\r\n                ],\r\n                datatime: ''\r\n            },\r\n            dataGt: {\r\n                data: [\r\n                ],\r\n                datatime: ''\r\n            },\r\n            titleTextLeft: \"\",\r\n            titleTextRight: \"\",\r\n            mapParam: {\r\n                // Mapbox 地图样式 style\r\n                style: 'mapbox://styles/mapbox/outdoors-v11',\r\n                center: [116.368608, 39.901744],\r\n                // Mapbox 地图的缩放等级\r\n                zoom: 10,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: 0,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: 0,\r\n            },\r\n            marks: {\r\n\r\n            },\r\n            sliderDisplay: 'none', //此状态为Slider的display的取值\r\n            dataListIndex: 0, // 数据list的index\r\n            dataType: 'history',\r\n            historyPredDataPath: './history_predictDataList/history_pred/lr_pred/', // 历史预测数据根路径\r\n        }\r\n\r\n        this.DataGtNameList = null // 真实数据的name list\r\n        this.DataPredNameList = null // 预测数据的name list\r\n\r\n\r\n        this.asyncMapParam = this.asyncMapParam.bind(this)\r\n        this.historyPredict = this.historyPredict.bind(this)\r\n        this.realTimePredice = this.realTimePredice.bind(this)\r\n        this.sliderOnChange = this.sliderOnChange.bind(this)\r\n        this.selectOnChange = this.selectOnChange.bind(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('PredictionAnalysis Destory')\r\n        this.store.clearAll()\r\n    }\r\n\r\n    asyncMapParam(positionParam) {\r\n        // console.log(positionParam)\r\n        this.setState({\r\n            ...this.state,\r\n            mapParam: positionParam,\r\n        })\r\n    }\r\n\r\n    historyPredict() {\r\n\r\n        let startTimeStr = \"2019-04-02_08-30\"\r\n        let endTimeStr = \"2019-04-02_08-39\"\r\n        this.DataGtNameList = loadDataList(startTimeStr, endTimeStr)\r\n        this.DataPredNameList = loadDataList(startTimeStr, endTimeStr)\r\n\r\n        let pathGt = './history_predictDataList/history_gt/' + this.DataGtNameList[0]\r\n        let pathPred = this.state.historyPredDataPath + this.DataPredNameList[0]\r\n        this.store.loaddata(pathGt, 'gt')\r\n        this.store.loaddata(pathPred, 'pred')\r\n\r\n        let sliderMarks = {}\r\n        for (let index = 0; index < this.DataGtNameList.length; index++) {\r\n            const element = this.DataGtNameList[index];\r\n            // sliderMarks[index] = element.split('.')[0]\r\n            sliderMarks[index] = {\r\n                style: {\r\n                    // color: '#1890ff',\r\n                    width: '120px'\r\n                },\r\n                label: <span>{element.split('.')[0].split('_')[1].split('-').join(':')}</span>\r\n            }\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            marks: sliderMarks,\r\n            sliderDisplay: 'block',\r\n            dataType: 'history',\r\n            titleTextLeft: \"真实拥堵情况\",\r\n            titleTextRight: \"拥堵预测情况 LR模型\",\r\n        })\r\n\r\n\r\n    }\r\n    realTimePredice() {\r\n        // message.warning('正在开发中');\r\n        this.store.getPredLr()\r\n        this.store.getPredSage()\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            sliderDisplay: 'none',\r\n            dataType: 'realtime',\r\n            titleTextLeft: \"LR模型预测\",\r\n            titleTextRight: \"SAGE模型预测\",\r\n        })\r\n    }\r\n\r\n    // 改变slider的值\r\n    sliderOnChange(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            dataListIndex: value\r\n        }, () => {\r\n            let pathGt = './history_predictDataList/history_gt/' + this.DataGtNameList[value]\r\n            let pathPred = this.state.historyPredDataPath + this.DataGtNameList[value]\r\n            this.store.loaddata(pathGt, 'gt')\r\n            this.store.loaddata(pathPred, 'pred')\r\n        })\r\n    }\r\n\r\n    selectOnChange(value) {\r\n        let predPath = this.state.historyPredDataPath\r\n        if (value === 'lr') {\r\n            predPath = './history_predictDataList/history_pred/lr_pred/'\r\n        }\r\n        else if (value === 'sage') {\r\n            predPath = './history_predictDataList/history_pred/sage_pred/'\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            titleTextRight: '拥堵预测情况 ' + value + '模型',\r\n            historyPredDataPath: predPath,\r\n        }, () => {\r\n            let pathPred = this.state.historyPredDataPath + this.DataGtNameList[this.state.dataListIndex]\r\n            this.store.loaddata(pathPred, 'pred')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row gutter={[16, 0]}>\r\n                    <Col span={24}>\r\n                        <PageHeader\r\n                            ghost={false}\r\n                            onBack={() => window.history.back()}\r\n                            title=\"交通拥堵预测对比\"\r\n                            // subTitle=\"交通拥堵\"\r\n                            extra={[\r\n                                <Button\r\n                                    key=\"1\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.historyPredict}\r\n                                >\r\n                                    加载历史预测对比数据\r\n                                </Button>,\r\n                                <Button\r\n                                    key=\"2\"\r\n                                    type=\"primary\"\r\n                                    onClick={throttle(this.realTimePredice, 1000)}\r\n                                >\r\n                                    交通拥堵预测模型对比\r\n                                </Button>,\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row align={\"middle\"} justify={\"center\"} gutter={[24, 4]}>\r\n                    <Col span={20} >\r\n                        <Slider\r\n                            min={0}\r\n                            max={this.DataGtNameList ? this.DataGtNameList.length - 1 : 0}\r\n                            marks={this.state.marks}\r\n                            included={false}\r\n                            step={null}\r\n                            defaultValue={0}\r\n                            tooltipPlacement={'bottom'}\r\n                            tooltipVisible={false}\r\n                            style={{ display: this.state.sliderDisplay }}\r\n                            onChange={this.sliderOnChange}\r\n                        />\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Select\r\n                            defaultValue=\"lr\"\r\n                            style={{ width: '100%', display: this.state.sliderDisplay }}\r\n                            onChange={this.selectOnChange}\r\n                        >\r\n                            <Option value=\"lr\">LR</Option>\r\n                            <Option value=\"sage\">SAGE</Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[16, 4]}>\r\n                    <Col span={12} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainerLeft\"\r\n                            titleText={this.state.titleTextLeft}\r\n                            chartsParam={\r\n                                { mapParam: this.state.mapParam }\r\n                            }\r\n                            data={this.state.dataType === 'history' ? this.store.dataGt : this.store.dataPredLr}\r\n                            asyncParam={this.asyncMapParam}\r\n                        />\r\n                    </Col>\r\n                    <Col span={12} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainerRight\"\r\n                            titleText={this.state.titleTextRight}\r\n                            chartsParam={\r\n                                { mapParam: this.state.mapParam }\r\n                            }\r\n                            data={this.state.dataType === 'history' ? this.store.dataPred : this.store.dataPredSage}\r\n                            asyncParam={this.asyncMapParam}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PredictionAnalysis;","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\n\r\nimport './BasicLayout.css';\r\n\r\nimport {\r\n    HomeOutlined,\r\n    DesktopOutlined,\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n    BorderOutlined,\r\n    BlockOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport Home from '../pages/home/Home';\r\nimport Analysis from '../pages/analysis/Analysis';\r\nimport PredictionAnalysis from '../pages/prediction/PredictionAnalysis';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n// 面包屑名称和icon的map\r\nconst breadcrumbMap = {\r\n    '/analysis': {\r\n        icon: <BorderOutlined />,\r\n        name: 'Analysis',\r\n    },\r\n    '/prediction': {\r\n        icon: <BlockOutlined />,\r\n        name: 'Prediction',\r\n    },\r\n    '/team': {\r\n        icon: <TeamOutlined />,\r\n        name: 'Team',\r\n    },\r\n    '/team/1': {\r\n        icon: <UserOutlined />,\r\n        name: 'Team1',\r\n    },\r\n};\r\n\r\n// route 等价于 <Route path=\"/\" exact component={Home} />\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: \"/analysis\",\r\n        exact: true,\r\n        component: Analysis\r\n    },\r\n    {\r\n        path: \"/prediction\",\r\n        exact: true,\r\n        component: PredictionAnalysis\r\n    },\r\n]\r\n\r\nclass BasicLayout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false,\r\n        }\r\n    }\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getBreadcrumbItems() {\r\n        const { location } = this.props;\r\n        const pathSnippets = location.pathname.split('/').filter(i => i);\r\n\r\n        const extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n            const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\r\n            return (\r\n                <Breadcrumb.Item key={url}>\r\n                    {breadcrumbMap[url].icon}\r\n                    <Link to={url}>{breadcrumbMap[url].name}</Link>\r\n                </Breadcrumb.Item>\r\n            );\r\n        });\r\n        const breadcrumbItems = [\r\n            <Breadcrumb.Item key=\"home\">\r\n                <HomeOutlined />\r\n                <Link to=\"/\">Home</Link>\r\n            </Breadcrumb.Item>,\r\n        ].concat(extraBreadcrumbItems);\r\n\r\n        return breadcrumbItems\r\n    }\r\n\r\n    render() {\r\n        const BreadcrumbItems = this.getBreadcrumbItems()\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider\r\n                    // collapsible\r\n                    // collapsed={this.state.collapsed}\r\n                    // onCollapse={this.onCollapse}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\"\r\n                    >\r\n                        <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n                            <Link to=\"/\">首页</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" icon={<BorderOutlined />}>\r\n                            <Link to=\"/analysis\">可视分析</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" icon={<BlockOutlined />}>\r\n                            <Link to=\"/prediction\">预测分析</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\" icon={<TeamOutlined />}>\r\n                            <Link to=\"/team\">团队介绍</Link>\r\n                        </Menu.Item>\r\n                        <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\r\n                            <Menu.Item key=\"6\">\r\n                                <Link to=\"/team/1\">Team 1</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n                        </SubMenu>\r\n                        <Menu.Item key=\"9\" icon={<FileOutlined />} >others</Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout className=\"site-layout\" style={{ marginLeft: 200 }}>\r\n                    <Header className=\"site-layout-background header-title\" style={{ padding: 0 }} >交通数据可视化分析系统</Header>\r\n                    <Content style={{ margin: '0 16px', overflow: 'initial' }}>\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            {BreadcrumbItems}\r\n                        </Breadcrumb>\r\n                        <div id=\"site-layout-content\" className=\"site-layout-background site-layout-content\">\r\n                            {\r\n                                routes.map((route, index) => {\r\n                                    return <Route key={index} path={route.path} exact={route.exact} component={route.component} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Traffic Vis System ©2020 Created by STDAL</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BasicLayout);","import axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nconst service = axios.create({\r\n    baseURL: 'http://39.105.49.28:5000/',\r\n    timeout: 120*1000,\r\n    withCredentials:true, // 允许携带cookies\r\n})\r\n\r\nservice.interceptors.response.use(\r\n    response => {\r\n        // console.log(response)\r\n        return response.data\r\n    },\r\n    error => {\r\n        console.log('error', error, error.response)\r\n        let response = error.response;\r\n        if(response === undefined){\r\n            message.error('undefined 加载后台数据出错');\r\n        }\r\n        else{\r\n            let errmessage = [response.status,response.statusText].join(',')\r\n            message.error('错误信息:' + errmessage)\r\n        }\r\n    }\r\n)\r\n\r\nexport default service","import predictCompareStore from './predictCompareStore';\r\n\r\nconst store = {\r\n    predictCompareStore\r\n}\r\nexport default store;","import {action, observable} from 'mobx';\r\nimport {message} from 'antd';\r\nimport request from '../common/service'\r\n\r\nclass PredictCompareStore {\r\n    // @observable historyGtDataList = [];\r\n    @observable dataGt = []; // 历史真实数据\r\n    @observable dataPred = []; // 历史预测数据\r\n\r\n    // @observable dataGtRTName = ''; // 实时数据名\r\n    @observable dataGtRT = []; // 实时数据\r\n     \r\n    @observable dataPredLr = [];  // 预测数据 LR方法\r\n    @observable dataPredSage = []; // 预测数据 Sage方法\r\n\r\n    processJsonData(data){\r\n        // 数据处理\r\n        for (let i = 0, len = data.length; i < len; i++) {\r\n            // 数据映射 1->1 3->150 7-175 10->200\r\n            switch (data[i][2]) {\r\n                case 3:\r\n                    data[i][2] = 150;\r\n                    break;\r\n                case 7:\r\n                    data[i][2] = 175;\r\n                    break;\r\n                case 10:\r\n                    data[i][2] = 200;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 加载数据\r\n    @action async loaddata(jsonPath,type) {\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let response = await fetch(jsonPath)\r\n        let resData = await response.json();\r\n        resData = resData.data\r\n        if (resData === undefined) {\r\n            message.warning('获取数据失败');\r\n        }\r\n        else {\r\n            resData = this.processJsonData(resData)\r\n            data.data = resData\r\n            data.datatime = jsonPath.split('/')[jsonPath.split('/').length - 1].split('.')[0]\r\n        }\r\n        \r\n        if(type === 'gt'){\r\n            this.dataGt = data\r\n        }\r\n        else if(type === 'pred'){\r\n            this.dataPred = data\r\n        }\r\n        else{\r\n            message.warning('loaddata param error');\r\n        }\r\n    }\r\n\r\n    // 加载实时拥堵数据\r\n    @action async getRealTimeData(param){\r\n        const res = await request.get('data')\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let resData = res.data\r\n        if(res === undefined){\r\n            message.error('数据 undefined')\r\n        }\r\n        else{\r\n            resData = this.processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataGt = data\r\n            console.log(res)\r\n        }\r\n    }\r\n\r\n    // 加载拥堵预测数据\r\n    // Lr方法\r\n    @action async getPredLr(param){\r\n        const res = await request.get('data/predict/lr')\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let resData = res.data\r\n        if(res === undefined){\r\n            message.error('数据 undefined')\r\n        }\r\n        else{\r\n            resData = this.processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataPredLr = data\r\n            console.log(res)\r\n        }\r\n    }\r\n    // Sage方法\r\n    @action async getPredSage(param){\r\n        const res = await request.get('data/predict/sage')\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let resData = res.data\r\n        if(res === undefined){\r\n            message.error('数据 undefined')\r\n        }\r\n        else{\r\n            resData = this.processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataPredSage = data\r\n            console.log(res)\r\n        }\r\n    }\r\n\r\n    // 清理数据 \r\n    @action async clearAll(){\r\n        this.dataGt = [];\r\n        this.dataPred = [];\r\n        // this.dataGtRTName = ''; // 实时数据名\r\n        this.dataGtRT = []; // 实时数据\r\n        this.dataPredLr = [];  // 预测数据 LR方法\r\n        this.dataPredSage = []; // 预测数据 Sage方法\r\n    }\r\n}\r\n\r\n\r\nconst predictCompareStore = new PredictCompareStore();\r\nexport default predictCompareStore;","import React from 'react';\r\nimport BasicLayout from './layouts/BasicLayout';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'mobx-react'\r\nimport store from './store/index'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <BasicLayout />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>\r\n  <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}