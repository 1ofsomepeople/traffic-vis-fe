{"version":3,"sources":["common/apis.js","common/EchartsMapBoxVis.js","pages/home/Home.js","common/MapBoxPointsVis.js","common/basicCharts/Pie.js","common/basicCharts/Line.js","common/basicCharts/JamScoreDash.js","pages/analysis/Analysis.js","pages/prediction/PredictionAnalysis.js","layouts/BasicLayout.js","common/service.js","store/predictCompareStore.js","store/index.js","store/analysisStore.js","App.js","serviceWorker.js","index.js"],"names":["dataStr_dataObj","dataStr","dataArr","split","concat","parseInt","loadDataList","startTimeStr","endTimeStr","dataObj","DataNameList","timeIndex","push","timeIndexObj","String","slice","throttle","fn","delay","prev","Date","now","context","this","arg","arguments","apply","debounce","timer","clearTimeout","setTimeout","processJsonData","data","i","len","length","EchartsMapBoxVis","props","move_fly","mapbox","lon","lat","zoom","pitch","bearing","duration","nowMapParam","getZoom","center","getCenter","lng","getBearing","getPitch","easeTo","maxDuration","easing","t","animate","showmapbox","datatime","mapboxgl","accessToken","myChartGl","echarts","init","document","getElementById","mapContainerID","setOption","title","text","state","titleText","padding","subtext","subtextStyle","color","fontStyle","fontWeight","fontFamily","fontSize","visualMap","type","categories","show","calculable","realtime","hoverLink","left","bottom","dimension","pieces","value","label","min","max","mapbox3D","mapParam","style","series","coordinateSystem","shading","minHeight","maxHeight","barSize","silent","getModel","getComponent","getMapbox","setMinZoom","setMaxZoom","addControl","NavigationControl","showZoom","showCompass","visualizePitch","ScaleControl","maxWidth","unit","on","zoomLevel","asyncParam","chartsParam","window","bind","onresize","resize","newOption","flyActionParam","console","log","id","className","height","width","Component","Home","span","Pie","chartsPie","showPie","chartsPieID","tooltip","trigger","formatter","name","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","Line","chartsLine","showLine","chartsLineID","timeStrList","index","str","toString","testOption","backgroundColor","axisPointer","lineStyle","x","y","x2","y2","colorStops","offset","global","grid","top","right","xAxis","axisLine","axisLabel","splitLine","axisTick","boundaryGap","yAxis","splitNumber","textStyle","showAllSymbol","symbol","symbolSize","normal","position","borderColor","borderWidth","areaStyle","graphic","LinearGradient","JamScoreDash","chartsDash","showDash","chartsDashID","angleAxis","clockwise","startAngle","radiusAxis","polar","roundCap","barWidth","pointer","detail","Analysis","inject","observer","resetCamera","setState","store","analysisStore","dataType","extraChartsShow","dataListIndex","isplaying","mapRef","React","createRef","loaddata","onClickBtn1","onClickBtn2","onClickBtn3","onClickBtn4","onClickBtn5","onClickBtn6","onClickBtn7","resizeAllCharts","jsonPath","fetch","response","json","undefined","resData","message","warning","intervalID","setInterval","path","clearInterval","timeoutID","intervalPlay","getRealTimeData","clearAll","getLayer","removeLayer","removeSource","geojson","centerPoint","features","geometry","coordinates","jumpTo","addSource","lineMetrics","addLayer","source","paint","layout","echartsMapContainer","current","gutter","ghost","onBack","history","back","extra","key","onClick","loading","dataGt","ref","Option","Select","PredictionAnalysis","predictCompareStore","dataPred","titleTextLeft","titleTextRight","marks","sliderDisplay","historyPredDataPath","dataIndex","predictType","DataGtNameList","DataPredNameList","asyncMapParam","historyPredict_local","historyPredict_online","realTimePredice","sliderOnChange_local","selectOnChange_local","sliderOnChange_online","selectOnChange_online","positionParam","pathGt","pathPred","sliderMarks","element","join","historyGtQueryParam","historyPredQueryParam","getHistoryGt","getHistoryPred","getPredLr","getPredSage","predPath","align","justify","included","step","defaultValue","tooltipPlacement","tooltipVisible","display","onChange","disabled","bordered","column","size","Item","content","scorePrecision","precisionClear","precisionSlow","precisionJam","precisionSlowJam","scoreMAE","scoreMAPE","dataLeft","dataRight","Header","Layout","Content","Footer","Sider","breadcrumbMap","Menu","SubMenu","icon","BorderOutlined","BlockOutlined","TeamOutlined","UserOutlined","routes","exact","component","BasicLayout","onCollapse","collapsed","pathSnippets","location","pathname","filter","extraBreadcrumbItems","map","_","url","to","HomeOutlined","BreadcrumbItems","getBreadcrumbItems","overflow","theme","defaultSelectedKeys","mode","marginLeft","margin","route","textAlign","withRouter","service","axios","create","baseURL","timeout","withCredentials","interceptors","use","error","errmessage","status","statusText","param","request","get","qs","stringify","res","jsonName","observable","action","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9329a5fb.chunk.js","sourcesContent":["\r\nfunction dataStr_dataObj(dataStr) {\r\n    let dataArr = dataStr.split('_')[0].split('-').concat(dataStr.split('_')[1].split('-'))\r\n    let resObj = {\r\n        'year': parseInt(dataArr[0]),\r\n        'month': parseInt(dataArr[1]),\r\n        'day': parseInt(dataArr[2]),\r\n        'hour': parseInt(dataArr[3]),\r\n        'minute': parseInt(dataArr[4]),\r\n    }\r\n    return resObj\r\n};\r\n\r\nfunction dataObj_dataStr(dataObj) {\r\n    return String(dataObj['year']) + '-' + ('0' + String(dataObj['month'])).slice(-2) + '-' + ('0' + String(dataObj['day'])).slice(-2) + '_' + ('0' + String(dataObj['hour'])).slice(-2) + '-' + ('0' + String(dataObj['minute'])).slice(-2)\r\n};\r\n\r\n// load datalist\r\nfunction loadDataList(startTimeStr,endTimeStr){\r\n    let DataNameList = []\r\n    // let startTimeStr = \"2019-04-02_08-30\"\r\n    // let endTimeStr = \"2019-04-02_09-30\"\r\n\r\n    let timeIndex = startTimeStr\r\n    while (timeIndex <= endTimeStr) {\r\n        DataNameList.push(timeIndex + '.json')\r\n\r\n        let timeIndexObj = dataStr_dataObj(timeIndex)\r\n\r\n        if (timeIndexObj['minute'] + 1 > 59) {\r\n            timeIndexObj['minute'] = 0\r\n            timeIndexObj['hour'] += 1\r\n        }\r\n        else {\r\n            timeIndexObj['minute'] += 1\r\n        }\r\n        timeIndex = dataObj_dataStr(timeIndexObj)\r\n    }\r\n    return DataNameList\r\n    \r\n}\r\n\r\nfunction eqArr(a, b) {\r\n    // 判断数组的长度\r\n    if (a.length !== b.length) {\r\n        return false\r\n    } else {\r\n        // 循环遍历数组的值进行比较\r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n// 4. 节流函数\r\n// 思路：在规定时间内只触发一次\r\nfunction throttle(fn, delay) {\r\n    // 利用闭包保存时间\r\n    let prev = Date.now()\r\n    return function () {\r\n        let context = this\r\n        let arg = arguments\r\n        let now = Date.now()\r\n        if (now - prev >= delay) {\r\n            fn.apply(context, arg)\r\n            prev = Date.now()\r\n        }\r\n    }\r\n}\r\n// 5. 防抖函数\r\n// 思路:在规定时间内未触发第二次，则执行\r\nfunction debounce(fn, delay) {\r\n    // 利用闭包保存定时器\r\n    let timer = null\r\n    return function () {\r\n        let context = this\r\n        let arg = arguments\r\n        // 在规定时间内再次触发会先清除定时器后再重设定时器\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            fn.apply(context, arg)\r\n        }, delay)\r\n    }\r\n}\r\n\r\n\r\n// 处理json数据 1,3,7,10的值映射到150,175,200\r\nfunction processJsonData(data){\r\n    // 数据处理\r\n    for (let i = 0, len = data.length; i < len; i++) {\r\n        // 数据映射 1->1 3->150 7-175 10->200\r\n        switch (data[i][2]) {\r\n            case 3:\r\n                data[i][2] = 150;\r\n                break;\r\n            case 7:\r\n                data[i][2] = 175;\r\n                break;\r\n            case 10:\r\n                data[i][2] = 200;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return data\r\n}\r\n\r\nexport {dataStr_dataObj, dataObj_dataStr, loadDataList, eqArr, throttle, debounce, processJsonData}","import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nimport './EchartsMapBoxVis.css'\r\nimport { eqArr } from './apis';\r\n\r\n\r\nclass EchartsMapBoxVis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // titleText: this.props.chartsParam.titleText ? this.props.chartsParam.titleText : ' ',\r\n            titleText: this.props.titleText,\r\n            mapParam: this.props.chartsParam.mapParam ? this.props.chartsParam.mapParam : null,\r\n        }\r\n        this.myChartGl = null // echarts对象实例\r\n        this.mapbox = null // mapbox对象实例\r\n        window.mapboxgl = mapboxgl;\r\n        // setTimeout(() => {\r\n        //     this.showmapbox(this.props.data.data, this.props.data.datatime);\r\n        // })\r\n        this.asyncParam = {\r\n            center: [116.368608, 39.901744],\r\n            // Mapbox 地图的缩放等级\r\n            zoom: 10,\r\n            // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n            pitch: 60,\r\n            // Mapbox 地图的旋转角度\r\n            bearing: -30,\r\n        }\r\n\r\n        this.showmapbox = this.showmapbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // window.mapboxgl = mapboxgl;\r\n        this.showmapbox(this.props.data.data, this.props.data.datatime);\r\n        window.onresize = () => {\r\n            this.myChartGl.resize()\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        let data = this.props.data.data\r\n        let datatime = this.props.data.datatime\r\n        let asyncParam = this.props.asyncParam ? this.props.chartsParam.mapParam : null\r\n\r\n        let newOption = {\r\n            title: {\r\n                text: this.props.titleText,\r\n                subtext: datatime ? datatime : '',\r\n            },\r\n            series: [{\r\n                data: data ? data : [],\r\n                barSize: (2 ** (this.mapbox.getZoom() - 10) * 0.1),\r\n            }],\r\n        }\r\n        if (asyncParam) {\r\n            newOption.mapbox3D = {\r\n                center: asyncParam.center,\r\n                zoom: asyncParam.zoom,\r\n                pitch: asyncParam.pitch,\r\n                bearing: asyncParam.bearing,\r\n            }\r\n        }\r\n        this.myChartGl.setOption(newOption)\r\n\r\n        let flyActionParam = this.props.flyActionParam\r\n        if (flyActionParam) {\r\n            this.move_fly(this.mapbox, ...flyActionParam);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('EchartsMapBoxVis Destory')\r\n        this.myChartGl = null // echarts对象实例\r\n        this.mapbox = null // mapbox对象实例\r\n        // window.mapboxgl = null\r\n    }\r\n\r\n    move_fly = (mapbox, lon, lat, zoom, pitch, bearing, duration) => {\r\n        this.nowMapParam = {\r\n            zoom: this.mapbox.getZoom(),\r\n            center: [this.mapbox.getCenter().lng, this.mapbox.getCenter().lat],\r\n            bearing: this.mapbox.getBearing(),\r\n            pitch: this.mapbox.getPitch()\r\n        }\r\n        if (lon !== this.nowMapParam.center[0] || lat !== this.nowMapParam.center[1] || zoom !== this.nowMapParam.zoom || pitch !== this.nowMapParam.pitch || bearing !== this.nowMapParam.bearing){\r\n            mapbox.easeTo({\r\n                // CameraOptions\r\n                center: [lon, lat],\r\n                zoom: zoom,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: pitch,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: bearing,\r\n    \r\n                // AnimationOptions\r\n                // 动态转换的持续时间，按毫秒计算\r\n                duration: duration,\r\n                maxDuration: duration,\r\n                // 该函数持续的时间在 0~1 之间， 返回一个表示状态的数字，初始状态为 0，最终状态为 1\r\n                easing(t) {\r\n                    return t;\r\n                    // return t*(2-t);\r\n                },\r\n                // If false , no animation will occur.\r\n                animate: true\r\n            });\r\n        }\r\n    };\r\n\r\n    showmapbox = (data = [], datatime = \"\") => {\r\n\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiaHVzdDEyIiwiYSI6ImNrM3BpbDhsYTAzbDgzY3J2OXBzdXFuNDMifQ.bDD9-o_SB4fR0UXzYLy9gg';\r\n\r\n        // echarts对象实例\r\n        this.myChartGl = echarts.init(document.getElementById(this.props.mapContainerID));\r\n\r\n        // let zoomeLevel = 11\r\n        // let barSize = (2 ** (zoomeLevel - 11)) * 0.08\r\n        this.myChartGl.setOption({\r\n            title: {\r\n                // text: '交通拥堵情况三维柱状图',\r\n                text: this.state.titleText,\r\n                padding: 20,//各个方向的内边距，默认是5，可以自行设置\r\n                subtext: datatime ? datatime : '', //\"2019-12-13 14:00\", //主标题的副标题文本内容，如果需要副标题就配置这一项\r\n                subtextStyle: {//副标题内容的样式\r\n                    color: 'black',\r\n                    fontStyle: 'normal',//主标题文字字体风格，默认normal，有italic(斜体),oblique(斜体)\r\n                    fontWeight: \"bold\",//可选normal(正常)，bold(加粗)，bolder(加粗)，lighter(变细)，100|200|300|400|500...\r\n                    fontFamily: \"san-serif\",//主题文字字体，默认微软雅黑\r\n                    fontSize: 16//主题文字字体大小，默认为12px\r\n                },\r\n            },\r\n            visualMap: {\r\n                type: 'piecewise', //分段型\r\n                categories: ['拥堵', '缓行', '通畅'],\r\n\r\n                // visualMap-continuous组件配置\r\n                show: true, //是否显示 visualMap-continuous 组件。如果设置为 false，不会显示，但是数据映射的功能还存在。\r\n                calculable: true, //是否显示拖拽用的手柄（手柄能拖拽调整选中范围）\r\n                realtime: true, //拖拽时，是否实时更新。\r\n                hoverLink: true,\r\n                left: 20,\r\n                bottom: 40,\r\n                dimension: 2, //指定用数据的『哪个维度』，映射到视觉元素上,默认取 data 中最后一个维度。\r\n                color: ['red', '#eac736', 'green'],\r\n                pieces: [\r\n                    { value: 150, label: '通畅', color: '#369674' }, // 表示value等于150的情况。\r\n                    { value: 175, label: '缓行', color: '#feb64d' },\r\n                    { value: 200, label: '拥堵', color: 'red' },\r\n                ],\r\n                min: 100,\r\n                max: 500,\r\n            },\r\n            // mapbox3D: {\r\n            //     // echarts-gl中mapbox只能应用部分配置，更多的mapbox配置要使用mapbox的api\r\n            //     // Mapbox 地图样式 style\r\n            //     style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            //     // Mapbox 地图中心经纬度,经纬度用数组表示\r\n            //     center: [116.368608, 39.901744],\r\n            //     // Mapbox 地图的缩放等级\r\n            //     zoom: 10,\r\n            //     // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n            //     pitch: 60,\r\n            //     // Mapbox 地图的旋转角度\r\n            //     bearing: -30,\r\n            // },\r\n            mapbox3D: this.state.mapParam ? this.state.mapParam : {\r\n                // echarts-gl中mapbox只能应用部分配置，更多的mapbox配置要使用mapbox的api\r\n                // Mapbox 地图样式 style\r\n                style: 'mapbox://styles/mapbox/outdoors-v11',\r\n                // Mapbox 地图中心经纬度,经纬度用数组表示\r\n                center: [116.368608, 39.901744],\r\n                // Mapbox 地图的缩放等级\r\n                zoom: 10,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: 60,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: -30,\r\n            },\r\n\r\n            series: [{\r\n                type: 'bar3D',\r\n                coordinateSystem: 'mapbox3D',\r\n                data: data ? data : [],\r\n                shading: 'color',\r\n                minHeight: 100,\r\n                maxHeight: 500,\r\n                barSize: 0.1,\r\n                // 图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。\r\n                silent: true, //设置为true 大大优化响应时间\r\n            }],\r\n\r\n        });\r\n\r\n        // 获取mapbox对象实例\r\n        this.mapbox = this.myChartGl.getModel().getComponent('mapbox3D').getMapbox();\r\n\r\n        // 设置mapbox的zoom范围\r\n        this.mapbox.setMinZoom(10);\r\n        this.mapbox.setMaxZoom(16);\r\n\r\n        // 添加缩放和指南针控件\r\n        this.mapbox.addControl(new mapboxgl.NavigationControl({\r\n            showZoom: true,\r\n            showCompass: true,\r\n            visualizePitch: true,\r\n        }), 'top-right');\r\n\r\n        // 添加比例尺控件\r\n        this.mapbox.addControl(new mapboxgl.ScaleControl({\r\n            maxWidth: 80,\r\n            unit: 'metric'\r\n        }), 'bottom-right');\r\n\r\n        // // 添加全屏控件 只能显示mapbox不能显示echarts\r\n        // this.mapbox.addControl(new mapboxgl.FullscreenControl({ \r\n        //     container: document.querySelector('mapbox_echartgl') }\r\n        // ));\r\n\r\n        // this.mapbox.on('load', function () {\r\n        //     console.log(\"地图加载\")\r\n        //     // window.mapboxgl = null;\r\n        // });\r\n\r\n        this.mapbox.on('mousemove', () => {\r\n            let zoomLevel = this.mapbox.getZoom()\r\n            let center = [this.mapbox.getCenter().lng, this.mapbox.getCenter().lat]\r\n            let bearing = this.mapbox.getBearing()\r\n            let pitch = this.mapbox.getPitch()\r\n\r\n            if (this.props.asyncParam) {\r\n                if (this.asyncParam.center[0] != center[0] || this.asyncParam.center[1] != center[1] || this.asyncParam.zoom != zoomLevel || this.asyncParam.bearing != bearing || this.asyncParam.pitch != pitch) {\r\n                    this.asyncParam.center = center\r\n                    this.asyncParam.zoom = zoomLevel\r\n                    this.asyncParam.bearing = bearing\r\n                    this.asyncParam.pitch = pitch\r\n                    this.props.asyncParam(this.asyncParam)\r\n                }\r\n            }\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <div id={this.props.mapContainerID} className=\"mapBoxContainer\" style={{ minHeight: \"600px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EchartsMapBoxVis;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport MapBoxPointsVis from '../../common/MapBoxPointsVis'\r\n\r\nimport './home.css';\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={6} className=\"positionLeft\">\r\n                        交通数据可视化\r\n                    </Col>\r\n                    <Col span={18} className=\"positionRight\">\r\n                        {/* <MapBoxPointsVis mapContainerID=\"homeBar1\"/> */}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={18} className=\"positionLeft\">\r\n                        \r\n                    </Col>\r\n                    <Col span={6} className=\"positionRight\">\r\n                        拥堵分析\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"homeBar\">\r\n                    <Col span={6} className=\"positionLeft\">\r\n                        实时预测\r\n                    </Col>\r\n                    <Col span={18} className=\"positionRight\">\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nclass MapBoxPointsVis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.map = null;\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiaHVzdDEyIiwiYSI6ImNrM3BpbDhsYTAzbDgzY3J2OXBzdXFuNDMifQ.bDD9-o_SB4fR0UXzYLy9gg';\r\n        \r\n    }\r\n\r\n    showMap(){\r\n        this.map = new mapboxgl.Map({\r\n            container: this.props.mapContainerID,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            zoom: 10,\r\n            center: [116.368608, 39.901744],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.showMap();\r\n        window.onresize = () => {\r\n            this.map.resize()\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <div id={this.props.mapContainerID} style={{ minHeight: \"600px\",height:\"100%\" }}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MapBoxPointsVis;","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nclass Pie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n        this.chartsPie = null // echarts对象实例\r\n        \r\n        this.showPie = this.showPie.bind(this)\r\n\r\n        \r\n    }\r\n\r\n    \r\n    showPie() {\r\n        // echarts对象实例\r\n        this.chartsPie = echarts.init(document.getElementById(this.props.chartsPieID));\r\n\r\n        let initOption = {\r\n            title: {\r\n                text: '拥堵占比',\r\n                left: 'top', // title 组件离容器左侧的距离。\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            \r\n            series: [\r\n                {\r\n                    name: '拥堵比例',\r\n                    type: 'pie',\r\n                    radius: '70%',\r\n                    center: ['50%', '50%'],\r\n                    data: [\r\n                        { value: 335, name: '拥堵' },\r\n                        { value: 310, name: '缓行' },\r\n                        { value: 1548, name: '畅通' }\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.chartsPie.setOption(initOption)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showPie();\r\n        window.onresize = () => {\r\n            this.chartsPie.resize()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('chartsPie Destory')\r\n        this.chartsPie = null // echarts对象实例\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.chartsPieID} style={{ minHeight: \"200px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pie;","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nclass Line extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n        this.chartsLine = null // echarts对象实例\r\n        \r\n        this.showLine = this.showLine.bind(this)\r\n    }\r\n\r\n    showLine() {\r\n        // echarts对象实例\r\n        this.chartsLine = echarts.init(document.getElementById(this.props.chartsLineID));\r\n\r\n        let timeStrList = []\r\n        for (let index = 0; index < 24; index++) {\r\n            let str = index.toString()\r\n            if(index<10){\r\n                str = '0'+str\r\n            }\r\n            str = str + ':00'\r\n            timeStrList.push(str)\r\n        }\r\n        let testOption = {\r\n            title: {\r\n                text: '当日24小时拥堵指数变化',\r\n                left: 'top' // title 组件离容器左侧的距离。\r\n            },\r\n            backgroundColor: '#fff',\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                backgroundColor: 'rgba(0,0,0,0.5)',\r\n                axisPointer: {\r\n                    lineStyle: {\r\n                        color: {\r\n                            type: 'linear',\r\n                            x: 0,\r\n                            y: 0,\r\n                            x2: 0,\r\n                            y2: 1,\r\n                            colorStops: [{\r\n                                offset: 0,\r\n                                color: 'red'\r\n                            }, {\r\n                                offset: 0.5,\r\n                                color: '#48b3FF',\r\n                            }, {\r\n                                offset: 1,\r\n                                color: '#d9efff'\r\n                            }],\r\n                            global: false\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n            grid: {\r\n                top: '20%',\r\n                left: '5%',\r\n                right: '5%',\r\n                bottom: '10%',\r\n                // containLabel: true\r\n            },\r\n            xAxis: [{\r\n                type: 'category',\r\n                color: '#59588D',\r\n                axisLine: {\r\n                    show: true\r\n                },\r\n                axisLabel: {\r\n                    color: '#282828'\r\n                },\r\n                splitLine: {\r\n                    show: true\r\n                },\r\n\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                boundaryGap: true,\r\n                data: timeStrList,\r\n\r\n            }],\r\n\r\n            yAxis: [{\r\n                type: 'value',\r\n                min: 0,\r\n                splitNumber: 4,\r\n                splitLine: {\r\n                    show: true,\r\n\r\n                },\r\n                axisLine: {\r\n                    show: true,\r\n                },\r\n                axisLabel: {\r\n                    show: true,\r\n                    // margin: 20,\r\n                    textStyle: {\r\n                        color: '#737373',\r\n\r\n                    },\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    lineStyle: {\r\n                        color: 'rgba(131,101,101,0.2)',\r\n                        type: 'dashed',\r\n                    }\r\n                }\r\n            }],\r\n            series: [{\r\n                name: '',\r\n                type: 'line',\r\n                // smooth: true, //是否平滑\r\n                showAllSymbol: true,\r\n                symbol: 'circle',\r\n                symbolSize: 10,\r\n                lineStyle: {\r\n                    normal: {\r\n                        color: \"#48B3FF\"\r\n                    },\r\n                },\r\n                label: {\r\n                    show: false,\r\n                    position: 'top',\r\n                    textStyle: {\r\n                        color: '#48B3FF',\r\n                    }\r\n                },\r\n\r\n                itemStyle: {\r\n                    color: \"#FFF\",\r\n                    borderColor: \"#48B3FF\",\r\n                    borderWidth: 2,\r\n\r\n                },\r\n                tooltip: {\r\n                    show: true\r\n                },\r\n                areaStyle: {\r\n                    normal: {\r\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(195,230,255,1)'\r\n                        },\r\n                        {\r\n                            offset: 1,\r\n                            color: 'rgba(195,230,255,0.1)'\r\n                        }\r\n                        ], false),\r\n                        shadowColor: 'rgba(195,230,255,0.1)',\r\n                        shadowBlur: 20\r\n                    }\r\n                },\r\n                data: [55, 35, 62, 55, 97, 64, 44, 66, 78, 82, 33, 77],\r\n            }]\r\n        };\r\n\r\n        this.chartsLine.setOption(testOption)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showLine();\r\n        window.onresize = () => {\r\n            this.chartsLine.resize()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        console.log('chartsLine Destory')\r\n        this.chartsLine = null // echarts对象实例\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.chartsLineID} style={{ minHeight: \"200px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Line;\r\n\r\n","import React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\nimport 'echarts-gl';\r\n\r\nclass JamScoreDash extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n\r\n        this.chartsDash = null // echarts对象实例\r\n        \r\n        this.showDash = this.showDash.bind(this)\r\n    }\r\n\r\n    showDash() {\r\n        // echarts对象实例\r\n        this.chartsDash = echarts.init(document.getElementById(this.props.chartsDashID));\r\n\r\n        let testOption = {\r\n            title: {\r\n                text: '拥堵指数',\r\n                left: 'top' // title 组件离容器左侧的距离。\r\n            },\r\n            angleAxis: {\r\n                max: 100, \r\n                clockwise: true,\r\n                startAngle: -135,\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            },\r\n            radiusAxis: {\r\n                type: 'category',\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            },\r\n            polar: {\r\n                center: ['50%', '50%'],\r\n                radius: '160%' //图形大小\r\n            },\r\n            series: [{\r\n                type: 'bar',\r\n                data: [{\r\n                    value: 75,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(1, 0, 0, 0, [{\r\n                                offset: 1,\r\n                                color: '#369674'\r\n                            }, {\r\n                                offset: 0.70,\r\n                                color: '#feb64d'\r\n                            }, {\r\n                                offset: 0,\r\n                                color: '#ff0000'\r\n                            }])\r\n                        }\r\n                    },\r\n                }],\r\n                coordinateSystem: 'polar',\r\n                roundCap: true,\r\n                barWidth: 10,\r\n            }, {\r\n                type: 'gauge',\r\n                radius: '110%',\r\n                min: 0,\r\n                max: 100,\r\n                splitNumber: 4,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    color: '#999999',\r\n                    fontSize: 10\r\n                },\r\n                itemStyle: {\r\n                    color: '#999999'\r\n                },\r\n                pointer: {\r\n                    length: '50%',\r\n                    width: 6\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                detail: {\r\n                    color: '#333333',\r\n                    fontSize: 25\r\n                },\r\n                data: [50]\r\n            }]\r\n        };\r\n\r\n        this.chartsDash.setOption(testOption)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showDash();\r\n        window.onresize = () => {\r\n            this.chartsDash.resize()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('chartsDash Destory')\r\n        this.chartsDash = null // echarts对象实例\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.chartsDashID} style={{ minHeight: \"200px\", height: \"100%\", width: \"100%\" }} />\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default JamScoreDash;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, PageHeader, message, Statistic, Progress, Card } from 'antd';\r\nimport { ArrowUpOutlined, ArrowDownOutlined, AlertOutlined } from '@ant-design/icons';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport { dataStr_dataObj, dataObj_dataStr, loadDataList, throttle, debounce } from '../../common/apis';\r\nimport { inject, observer } from 'mobx-react';\r\nimport echarts from 'echarts';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport * as d3 from 'd3';\r\n\r\nimport './Analysis.css'\r\nimport Pie from '../../common/basicCharts/Pie';\r\nimport Line from '../../common/basicCharts/Line';\r\nimport JamScoreDash from '../../common/basicCharts/JamScoreDash';\r\n\r\n\r\n@inject('store')\r\n@observer\r\nclass Analysis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.store = props.store.analysisStore\r\n        this.state = {\r\n            // 模拟数据\r\n            data: {\r\n                data: [\r\n                    [116.368608, 39.901744, 150],\r\n                    [116.378608, 39.901744, 350],\r\n                    [116.388608, 39.901744, 500],\r\n                ],\r\n                datatime: ''\r\n            },\r\n            dataType: 'history',\r\n            chartsParam: {\r\n                // titleText: \"交通拥堵情况三维柱状图\",\r\n            },\r\n            titleText: \"\",\r\n            extraChartsShow: false, // 额外图表的显示情况\r\n        }\r\n        this.DataNameList = null // 轮播的数据name list\r\n        this.dataListIndex = 0 // 遍历数据list的index\r\n        this.isplaying = false // 数据是否正在轮播\r\n\r\n        this.mapRef = React.createRef(); // ref\r\n        this.mapbox = null // mapbox实例\r\n        // window.mapboxgl = mapboxgl;\r\n\r\n\r\n        this.loaddata = this.loaddata.bind(this)\r\n        this.onClickBtn1 = this.onClickBtn1.bind(this)\r\n        this.onClickBtn2 = this.onClickBtn2.bind(this)\r\n        this.onClickBtn3 = this.onClickBtn3.bind(this)\r\n        this.onClickBtn4 = this.onClickBtn4.bind(this)\r\n        this.onClickBtn5 = this.onClickBtn5.bind(this)\r\n        this.onClickBtn6 = this.onClickBtn6.bind(this)\r\n        this.onClickBtn7 = this.onClickBtn7.bind(this)\r\n        this.resizeAllCharts = this.resizeAllCharts.bind(this)\r\n    };\r\n\r\n    // 加载数据\r\n    async loaddata(jsonPath) {\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let response = await fetch(jsonPath)\r\n        let resData = await response.json();\r\n        resData = resData.data\r\n        if (resData === undefined) {\r\n            message.warning('获取数据失败');\r\n        }\r\n        else {\r\n            // console.log(resData)\r\n            // 数据处理\r\n            for (let i = 0, len = resData.length; i < len; i++) {\r\n                // 数据映射 1->1 3->150 7-175 10->200\r\n                switch (resData[i][2]) {\r\n                    case 3:\r\n                        resData[i][2] = 150;\r\n                        break;\r\n                    case 7:\r\n                        resData[i][2] = 175;\r\n                        break;\r\n                    case 10:\r\n                        resData[i][2] = 200;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            data.data = resData\r\n            data.datatime = jsonPath.split('/')[jsonPath.split('/').length - 1].split('.')[0]\r\n        }\r\n        this.setState({\r\n            data: data,\r\n            dataType: 'history',\r\n            titleText: \"交通拥堵情况三维柱状图\",\r\n        })\r\n        return data\r\n    }\r\n\r\n\r\n\r\n    intervalPlay(DataNameList) {\r\n        this.intervalID = setInterval(() => {\r\n            let path = './testDataList/' + DataNameList[this.dataListIndex > DataNameList.length ? this.dataListIndex = 0 : this.dataListIndex++]\r\n            this.loaddata(path)\r\n        }, 500)\r\n    }\r\n\r\n    // 加载测试数据\r\n    onClickBtn1() {\r\n        this.loaddata(\"./2019-04-02_09-00.json\")\r\n        this.setState({\r\n            ...this.state,\r\n            extraChartsShow: true,\r\n        }, () => {\r\n            this.resizeAllCharts()\r\n        })\r\n    }\r\n    // 数据轮播\r\n    onClickBtn2() {\r\n        // this.setState({\r\n        //     ...this.state,\r\n        //     flyActionParam: null\r\n        // })\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            clearTimeout(this.timeoutID)\r\n            this.intervalID = null\r\n            this.isplaying = false\r\n        }\r\n        else {\r\n            this.isplaying = true\r\n\r\n            let startTimeStr = \"2019-04-02_08-30\"\r\n            let endTimeStr = \"2019-04-02_09-30\"\r\n            this.DataNameList = loadDataList(startTimeStr, endTimeStr)\r\n            this.intervalPlay(this.DataNameList)\r\n        }\r\n    }\r\n    // 加载实时交通数据\r\n    onClickBtn3() {\r\n        // message.warning('正在开发中');\r\n        this.store.getRealTimeData()\r\n        this.setState({\r\n            ...this.state,\r\n            dataType: 'realtime',\r\n            titleText: \"交通实时拥堵情况三维柱状图\",\r\n            extraChartsShow: false,\r\n        }, () => {\r\n            this.resizeAllCharts()\r\n        })\r\n    }\r\n    // 局部展示\r\n    onClickBtn4() {\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            this.intervalID = null\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.360163, 40.001514, 14, 60, -45, 1000]\r\n        }, () => {\r\n            if (this.DataNameList && this.isplaying) {\r\n                this.timeoutID = setTimeout(() => {\r\n                    this.intervalPlay(this.DataNameList)\r\n                    this.setState({\r\n                        ...this.state,\r\n                        flyActionParam: null\r\n                    })\r\n                }, 2000)\r\n            }\r\n\r\n        })\r\n    }\r\n    // 全局展示\r\n    onClickBtn5() {\r\n        if (this.intervalID) {\r\n            clearInterval(this.intervalID);\r\n            this.intervalID = null\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.420608, 39.851744, 11.5, 60, -30, 1000]\r\n        }, () => {\r\n            if (this.DataNameList && this.isplaying) {\r\n                this.timeoutID = setTimeout(() => {\r\n                    this.intervalPlay(this.DataNameList)\r\n                    this.setState({\r\n                        ...this.state,\r\n                        flyActionParam: null\r\n                    })\r\n                }, 2000)\r\n            }\r\n        })\r\n    }\r\n    // 重置地图，更新摄像机视角\r\n    resetCamera = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            flyActionParam: [116.368608, 39.901744, 10, 60, -30, 1000],\r\n        })\r\n    }\r\n    // 地图重置\r\n    onClickBtn6() {\r\n        this.store.clearAll()\r\n        this.setState({\r\n            data: {\r\n                data: [],\r\n                datatime: ''\r\n            },\r\n            titleText: \"\",\r\n            // flyActionParam: [116.368608, 39.901744, 10, 60, -30, 1000],\r\n            extraChartsShow: false,\r\n        }, () => {\r\n            this.resizeAllCharts()\r\n            this.resetCamera()\r\n        })\r\n        clearInterval(this.intervalID);\r\n        clearTimeout(this.timeoutID)\r\n        this.timeoutID = null\r\n        this.intervalID = null\r\n        this.DataNameList = null\r\n        this.dataListIndex = 0\r\n\r\n        // 清除mapbox图层和数据源\r\n        if (this.mapbox.getLayer('line')) {\r\n            this.mapbox.removeLayer('line')\r\n            this.mapbox.removeSource('line')\r\n        }\r\n    }\r\n    onClickBtn7() {\r\n\r\n        // 清除mapbox图层和数据源\r\n        if (this.mapbox.getLayer('line')) {\r\n            this.mapbox.removeLayer('line')\r\n            this.mapbox.removeSource('line')\r\n        }\r\n\r\n        let color = [\r\n            '#ff0000', // red\r\n            '#feb64d', // yello \r\n            '#369674', // green\r\n        ]\r\n        let geojson = {\r\n            \"type\": \"FeatureCollection\",\r\n            \"features\": [{\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[0]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.326534, 39.993866],\r\n                        [116.326624, 39.991486],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[1]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.326624, 39.991486],\r\n                        [116.326624, 39.991366],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[2]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.326624, 39.991366],\r\n                        [116.326964, 39.984936],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[1]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.326964, 39.984936],\r\n                        [116.327014, 39.984196],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[0]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327014, 39.984196],\r\n                        [116.327105, 39.982096],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[2]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327105, 39.982096],\r\n                        [116.327145, 39.981355],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[1]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327145, 39.981355],\r\n                        [116.327225, 39.979745],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[0]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327225, 39.979745],\r\n                        [116.327225, 39.979745],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[2]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327225, 39.979745],\r\n                        [116.327405, 39.975575],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[1]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327405, 39.975575],\r\n                        [116.327455, 39.974735],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[2]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327455, 39.974735],\r\n                        [116.327585, 39.972785],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[0]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327585, 39.972785],\r\n                        [116.327635, 39.971525],\r\n                    ],\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'color': color[2]\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"LineString\",\r\n                    \"coordinates\": [\r\n                        [116.327635, 39.971525],\r\n                        [116.327895, 39.966405]\r\n                    ],\r\n                }\r\n            },\r\n            ]\r\n        };\r\n\r\n\r\n        let speedValue = [20, 57, 30, 15, 68, 60, 15]\r\n\r\n        let centerPoint = geojson.features[geojson.features.length >> 1].geometry.coordinates[0]\r\n        // setup the viewport\r\n        this.mapbox.jumpTo({\r\n            'center': centerPoint,\r\n            'zoom': 13,\r\n            'pitch': 0,\r\n            'bearing': 0,\r\n        });\r\n\r\n        if (this.mapbox.getLayer('line')) {\r\n            console.log('mapbox line layer exist')\r\n        }\r\n        else {\r\n            this.mapbox.addSource('line', {\r\n                type: 'geojson',\r\n                lineMetrics: true,\r\n                data: geojson\r\n            });\r\n            // the layer must be of type 'line'\r\n            this.mapbox.addLayer({\r\n                type: 'line',\r\n                source: 'line',\r\n                id: 'line',\r\n                paint: {\r\n                    // 'line-gap-width': 1,\r\n                    'line-opacity': 0.8,\r\n                    'line-color': ['get', 'color'],\r\n                    'line-width': 8,\r\n                    // 'line-gradient' must be specified using an expression\r\n                    // with the special 'line-progress' property\r\n                    // 'line-gradient': [\r\n                    //     'interpolate',\r\n                    //     ['linear'],\r\n                    //     ['line-progress'],\r\n                    //     0, \"blue\",\r\n                    //     0.1, \"royalblue\",\r\n                    //     0.3, \"cyan\",\r\n                    //     0.5, \"lime\",\r\n                    //     0.7, \"yellow\",\r\n                    //     1, \"red\"\r\n                    // ]\r\n                },\r\n                layout: {\r\n                    'line-cap': 'butt',\r\n                    'line-join': 'miter',\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // 调整charts大小\r\n    resizeAllCharts() {\r\n        this.echartsMapContainer = echarts.init(document.getElementById(\"mapContainer\"))\r\n        this.echartsMapContainer.resize();\r\n        echarts.init(document.getElementById(\"pie1\")).resize();\r\n        echarts.init(document.getElementById(\"line1\")).resize();\r\n        echarts.init(document.getElementById(\"dash1\")).resize();\r\n    }\r\n    componentDidMount() {\r\n        window.onresize = this.resizeAllCharts\r\n        // 获取mapbox对象实例\r\n        this.mapbox = this.mapRef.current.mapbox\r\n        // this.mapbox = this.echartsMapContainer.getModel().getComponent('mapbox3D').getMapbox();\r\n        // this.mapRef.current.mapbox.setStyle('mapbox://styles/mapbox/dark-v10')\r\n    };\r\n\r\n    componentDidUpdate() {\r\n\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        console.log('Analysis Destory')\r\n        this.store.clearAll()\r\n        this.mapbox = null\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id='analysisLayout'>\r\n                <Row gutter={[16, 0]}>\r\n                    <Col span={24}>\r\n                        <PageHeader\r\n                            ghost={false}\r\n                            onBack={() => window.history.back()}\r\n                            title=\"交通拥堵可视化分析\"\r\n                            // subTitle=\"交通拥堵\"\r\n                            extra={[\r\n                                <Button\r\n                                    key=\"1\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.onClickBtn1}\r\n                                    loading={this.store.loading}\r\n                                >测试数据</Button>,\r\n                                <Button\r\n                                    key=\"2\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn2, 500)}\r\n                                    loading={this.store.loading}\r\n                                >数据轮播</Button>,\r\n                                <Button\r\n                                    key=\"3\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn3, 500)}\r\n                                    loading={this.store.loading}\r\n                                >实时交通</Button>,\r\n                                <Button\r\n                                    key=\"7\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.onClickBtn7}\r\n                                    loading={this.store.loading}\r\n                                >\r\n                                    线路测试\r\n                                </Button>,\r\n                                <Button\r\n                                    key=\"4\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn4, 500)}\r\n                                    loading={this.store.loading}\r\n                                >局部演示</Button>,\r\n                                <Button\r\n                                    key=\"5\"\r\n                                    type=\"primary\"\r\n                                    onClick={debounce(this.onClickBtn5, 500)}\r\n                                    loading={this.store.loading}\r\n                                >全局演示</Button>,\r\n                                <Button\r\n                                    key=\"6\"\r\n                                    onClick={this.onClickBtn6}\r\n                                    loading={this.store.loading}\r\n                                >地图重置</Button>,\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[16, 4]} >\r\n                    <Col span={this.state.extraChartsShow ? 16 : 24} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainer\"\r\n                            chartsParam={this.state.chartsParam}\r\n                            data={this.state.dataType === 'history' ? this.state.data : this.store.dataGt}\r\n                            flyActionParam={this.state.flyActionParam}\r\n                            titleText={this.state.titleText}\r\n                            ref={this.mapRef}\r\n                        />\r\n                    </Col>\r\n                    <Col span={this.state.extraChartsShow ? 8 : 0} >\r\n                        <Row gutter={[16, 4]}>\r\n                            <Col span={8}>\r\n                                <JamScoreDash chartsDashID=\"dash1\" />\r\n                            </Col >\r\n                            <Col span={16}>\r\n                                <Pie chartsPieID=\"pie1\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[16, 4]}>\r\n                            <Line chartsLineID=\"line1\" />\r\n                        </Row>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Analysis;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, PageHeader, message, Slider, Select, Descriptions, Popover } from 'antd';\r\nimport EchartsMapBoxVis from '../../common/EchartsMapBoxVis';\r\nimport MapBoxPointsVis from '../../common/MapBoxPointsVis'\r\nimport { dataStr_dataObj, dataObj_dataStr, loadDataList, throttle, debounce } from '../../common/apis';\r\nimport './PredictionAnalysis.css';\r\nimport { inject, observer } from 'mobx-react';\r\nimport echarts from 'echarts';\r\n// import {predictCompareStore} from \"../../store/index\";\r\nconst { Option } = Select;\r\n@inject('store')\r\n@observer\r\nclass PredictionAnalysis extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.store = props.store.predictCompareStore\r\n        // console.log(this.store.data)\r\n        this.state = {\r\n            // 模拟数据\r\n            dataPred: {\r\n                data: [\r\n                ],\r\n                datatime: ''\r\n            },\r\n            dataGt: {\r\n                data: [\r\n                ],\r\n                datatime: ''\r\n            },\r\n            titleTextLeft: \"\",\r\n            titleTextRight: \"\",\r\n            mapParam: {\r\n                // Mapbox 地图样式 style\r\n                style: 'mapbox://styles/mapbox/outdoors-v11',\r\n                center: [116.368608, 39.901744],\r\n                // Mapbox 地图的缩放等级\r\n                zoom: 10,\r\n                // 视角俯视的倾斜角度,默认为0，也就是正对着地图。最大60。\r\n                pitch: 0,\r\n                // Mapbox 地图的旋转角度\r\n                bearing: 0,\r\n            },\r\n            marks: {\r\n\r\n            },\r\n            sliderDisplay: 'none', //此状态为Slider的display的取值\r\n            dataListIndex: 0, // 数据list的index\r\n            historyPredDataPath: './history_predictDataList/history_pred/lr_pred/', // 历史预测数据根路径\r\n\r\n            dataIndex: 0, // history数据的index值\r\n            predictType: 'lr', // history预测数据的预测模型类型\r\n\r\n        }\r\n\r\n        this.DataGtNameList = null // 真实数据的name list\r\n        this.DataPredNameList = null // 预测数据的name list\r\n\r\n\r\n        this.asyncMapParam = this.asyncMapParam.bind(this)\r\n        this.historyPredict_local = this.historyPredict_local.bind(this)\r\n        this.historyPredict_online = this.historyPredict_online.bind(this)\r\n        this.realTimePredice = this.realTimePredice.bind(this)\r\n        this.sliderOnChange_local = this.sliderOnChange_local.bind(this)\r\n        this.selectOnChange_local = this.selectOnChange_local.bind(this)\r\n        this.sliderOnChange_online = this.sliderOnChange_online.bind(this)\r\n        this.selectOnChange_online = this.selectOnChange_online.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onresize = () => {\r\n            echarts.init(document.getElementById(\"mapContainerLeft\")).resize();\r\n            echarts.init(document.getElementById(\"mapContainerRight\")).resize();\r\n        };\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('PredictionAnalysis Destory')\r\n        this.store.clearAll()\r\n    }\r\n\r\n    asyncMapParam(positionParam) {\r\n        // console.log(positionParam)\r\n        this.setState({\r\n            ...this.state,\r\n            mapParam: positionParam,\r\n        })\r\n    }\r\n\r\n\r\n    // 可弃置\r\n    // 加载历史对比数据按钮点击事件 本地local数据 \r\n    historyPredict_local() {\r\n        let startTimeStr = \"2019-04-02_08-30\"\r\n        let endTimeStr = \"2019-04-02_08-39\"\r\n        this.DataGtNameList = loadDataList(startTimeStr, endTimeStr)\r\n        this.DataPredNameList = loadDataList(startTimeStr, endTimeStr)\r\n\r\n        let pathGt = './history_predictDataList/history_gt/' + this.DataGtNameList[0]\r\n        let pathPred = this.state.historyPredDataPath + this.DataPredNameList[0]\r\n        this.store.loaddata(pathGt, 'gt')\r\n        this.store.loaddata(pathPred, 'pred')\r\n\r\n        let sliderMarks = {}\r\n        for (let index = 0; index < this.DataGtNameList.length; index++) {\r\n            const element = this.DataGtNameList[index];\r\n            // sliderMarks[index] = element.split('.')[0]\r\n            sliderMarks[index] = {\r\n                style: {\r\n                    // color: '#1890ff',\r\n                    width: '120px'\r\n                },\r\n                label: <span>{element.split('.')[0].split('_')[1].split('-').join(':')}</span>\r\n            }\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            marks: sliderMarks,\r\n            sliderDisplay: 'block',\r\n            titleTextLeft: \"真实拥堵情况\",\r\n            titleTextRight: \"拥堵预测情况 LR模型\",\r\n        })\r\n    }\r\n\r\n    // 加载历史对比数据按钮点击事件 online数据 \r\n    historyPredict_online() {\r\n        let startTimeStr = \"2019-04-02_08-30\"\r\n        let endTimeStr = \"2019-04-02_08-39\"\r\n        this.DataGtNameList = loadDataList(startTimeStr, endTimeStr)\r\n        let sliderMarks = {}\r\n        for (let index = 0; index < this.DataGtNameList.length; index++) {\r\n            const element = this.DataGtNameList[index];\r\n            // sliderMarks[index] = element.split('.')[0]\r\n            sliderMarks[index] = {\r\n                style: {\r\n                    // color: '#1890ff',\r\n                    width: '120px'\r\n                },\r\n                label: <span>{element.split('.')[0].split('_')[1].split('-').join(':')}</span>\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            marks: sliderMarks,\r\n            sliderDisplay: 'block',\r\n            titleTextLeft: \"真实拥堵情况\",\r\n            titleTextRight: \"拥堵预测情况 LR模型\",\r\n            dataIndex: 0, // history数据的index值\r\n            predictType: 'lr', // history预测数据的预测模型类型\r\n        }, () => {\r\n            let historyGtQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n            }\r\n            let historyPredQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n                predictType: this.state.predictType,\r\n            }\r\n            this.store.getHistoryGt(historyGtQueryParam);\r\n            this.store.getHistoryPred(historyPredQueryParam);\r\n        })\r\n\r\n    }\r\n\r\n    realTimePredice() {\r\n        // message.warning('正在开发中');\r\n        this.setState({\r\n            ...this.state,\r\n            sliderDisplay: 'none',\r\n            titleTextLeft: \"LR模型预测\",\r\n            titleTextRight: \"SAGE模型预测\",\r\n        }, () => {\r\n            this.store.getPredLr()\r\n            this.store.getPredSage()\r\n        })\r\n    }\r\n\r\n    // 改变slider的值\r\n    // 从public本地数据中加载预测的数据和真实数据\r\n    sliderOnChange_local(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            dataListIndex: value\r\n        }, () => {\r\n            let pathGt = './history_predictDataList/history_gt/' + this.DataGtNameList[value]\r\n            let pathPred = this.state.historyPredDataPath + this.DataGtNameList[value]\r\n            this.store.loaddata(pathGt, 'gt')\r\n            this.store.loaddata(pathPred, 'pred')\r\n        })\r\n    }\r\n    // 加载后台生成的模型预测数据和真实数据\r\n    sliderOnChange_online(value) {\r\n        // console.log(value)\r\n        this.setState({\r\n            ...this.state,\r\n            dataIndex: value,\r\n        }, () => {\r\n            let historyGtQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n            }\r\n            let historyPredQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n                predictType: this.state.predictType,\r\n            }\r\n            this.store.getHistoryGt(historyGtQueryParam);\r\n            this.store.getHistoryPred(historyPredQueryParam);\r\n        })\r\n    }\r\n\r\n    // 切换预测模型\r\n    // 从public本地数据中加载预测的数据\r\n    selectOnChange_local(value) {\r\n        let predPath = this.state.historyPredDataPath\r\n        if (value === 'lr') {\r\n            predPath = './history_predictDataList/history_pred/lr_pred/'\r\n        }\r\n        else if (value === 'sage') {\r\n            predPath = './history_predictDataList/history_pred/sage_pred/'\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            titleTextRight: '拥堵预测情况 ' + value + '模型',\r\n            historyPredDataPath: predPath,\r\n        }, () => {\r\n            let pathPred = this.state.historyPredDataPath + this.DataGtNameList[this.state.dataListIndex]\r\n            this.store.loaddata(pathPred, 'pred')\r\n        })\r\n    }\r\n    // 加载后台生成的模型预测数据\r\n    selectOnChange_online(value) {\r\n        // console.log(value)\r\n        this.setState({\r\n            ...this.state,\r\n            predictType: value,\r\n            titleTextRight: '拥堵预测情况 ' + value + '模型',\r\n        }, () => {\r\n            let historyPredQueryParam = {\r\n                dataIndex: this.state.dataIndex,\r\n                predictType: this.state.predictType,\r\n            }\r\n            this.store.getHistoryPred(historyPredQueryParam);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row gutter={[16, 0]}>\r\n                    <Col span={24}>\r\n                        <PageHeader\r\n                            ghost={false}\r\n                            onBack={() => window.history.back()}\r\n                            title=\"交通拥堵预测对比\"\r\n                            // subTitle=\"交通拥堵\"\r\n                            extra={[\r\n                                <Button\r\n                                    key=\"1\"\r\n                                    type=\"primary\"\r\n                                    onClick={this.historyPredict_online}\r\n                                    loading={this.store.loading}\r\n                                >\r\n                                    加载历史预测对比数据\r\n                                </Button>,\r\n                                <Button\r\n                                    key=\"2\"\r\n                                    type=\"primary\"\r\n                                    onClick={throttle(this.realTimePredice, 1000)}\r\n                                    loading={this.store.loading}\r\n                                >\r\n                                    交通拥堵预测模型对比\r\n                                </Button>,\r\n                            ]}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row align={\"middle\"} justify={\"center\"} gutter={[24, 4]}>\r\n                    <Col span={16} >\r\n                        <Slider\r\n                            min={0}\r\n                            max={this.DataGtNameList ? this.DataGtNameList.length - 1 : 0}\r\n                            marks={this.state.marks}\r\n                            value={this.state.dataIndex}\r\n                            included={false}\r\n                            step={null}\r\n                            defaultValue={0}\r\n                            tooltipPlacement={'bottom'}\r\n                            tooltipVisible={false}\r\n                            style={{ display: this.state.sliderDisplay }}\r\n                            onChange={this.sliderOnChange_online}\r\n                            disabled={this.store.loading}\r\n                        />\r\n                    </Col>\r\n                    <Col span={8} className=\"PredInfo\">\r\n                        <Descriptions\r\n                            // title=\"预测算法信息\"\r\n                            layout=\"vertical\"\r\n                            bordered={true}\r\n                            column={5}\r\n                            size=\"small\"\r\n                            style={{ display: this.state.sliderDisplay }}\r\n                        >\r\n                            <Descriptions.Item\r\n                                label=\"算法模型\"\r\n                            >\r\n                                {/* {this.state.predictType} */}\r\n                                <Select\r\n                                    defaultValue=\"lr\"\r\n                                    style={{ width: '100%', display: this.state.sliderDisplay }}\r\n                                    onChange={this.selectOnChange_online}\r\n                                    loading={this.store.loading}\r\n                                    disabled={this.store.loading}\r\n                                >\r\n                                    <Option value=\"lr\">LR</Option>\r\n                                    <Option value=\"sage\">SAGE</Option>\r\n                                </Select>\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>预测正确节点数占总数的比例</p>\r\n                                        </div>\r\n                                    }>\r\n                                        准确率\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.scorePrecision + '%'}\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>各类别准确率：</p>\r\n                                            <p>通畅准确率：{this.store.precisionClear+ '%'}</p>\r\n                                            <p>缓行准确率：{this.store.precisionSlow + '%'}</p>\r\n                                            <p>拥堵准确率：{this.store.precisionJam + '%'}</p>\r\n                                            <p>非通畅准确率：{this.store.precisionSlowJam+ '%'}</p>\r\n                                        </div>\r\n                                    }>\r\n                                        拥堵准确率\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.precisionJam + '%'}\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>平均绝对误差</p>\r\n                                        </div>\r\n                                    }>\r\n                                        MAE\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.scoreMAE}\r\n                            </Descriptions.Item>\r\n\r\n                            <Descriptions.Item\r\n                                label={\r\n                                    <Popover content={\r\n                                        <div>\r\n                                            <p>平均绝对百分比误差</p>\r\n                                        </div>\r\n                                    }>\r\n                                        MAPE\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                {this.store.scoreMAPE + '%'}\r\n                            </Descriptions.Item>\r\n                            \r\n                        </Descriptions>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    gutter={[16, 4]}\r\n                >\r\n                    <Col span={12} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainerLeft\"\r\n                            titleText={this.state.titleTextLeft}\r\n                            chartsParam={\r\n                                { mapParam: this.state.mapParam }\r\n                            }\r\n                            data={this.store.dataLeft}\r\n                            asyncParam={this.asyncMapParam}\r\n                        />\r\n                    </Col>\r\n                    <Col span={12} className=\"mapContainer\">\r\n                        <EchartsMapBoxVis\r\n                            mapContainerID=\"mapContainerRight\"\r\n                            titleText={this.state.titleTextRight}\r\n                            chartsParam={\r\n                                { mapParam: this.state.mapParam }\r\n                            }\r\n                            data={this.store.dataRight}\r\n                            asyncParam={this.asyncMapParam}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PredictionAnalysis;","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\n\r\nimport './BasicLayout.css';\r\n\r\nimport {\r\n    HomeOutlined,\r\n    DesktopOutlined,\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n    BorderOutlined,\r\n    BlockOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport Home from '../pages/home/Home';\r\nimport Analysis from '../pages/analysis/Analysis';\r\nimport PredictionAnalysis from '../pages/prediction/PredictionAnalysis';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n// 面包屑名称和icon的map\r\nconst breadcrumbMap = {\r\n    '/analysis': {\r\n        icon: <BorderOutlined />,\r\n        name: 'Analysis',\r\n    },\r\n    '/prediction': {\r\n        icon: <BlockOutlined />,\r\n        name: 'Prediction',\r\n    },\r\n    '/team': {\r\n        icon: <TeamOutlined />,\r\n        name: 'Team',\r\n    },\r\n    '/team/1': {\r\n        icon: <UserOutlined />,\r\n        name: 'Team1',\r\n    },\r\n};\r\n\r\n// route 等价于 <Route path=\"/\" exact component={Home} />\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: \"/analysis\",\r\n        exact: true,\r\n        component: Analysis\r\n    },\r\n    {\r\n        path: \"/prediction\",\r\n        exact: true,\r\n        component: PredictionAnalysis\r\n    },\r\n]\r\n\r\nclass BasicLayout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false,\r\n        }\r\n    }\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getBreadcrumbItems() {\r\n        const { location } = this.props;\r\n        const pathSnippets = location.pathname.split('/').filter(i => i);\r\n\r\n        const extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n            const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\r\n            return (\r\n                <Breadcrumb.Item key={url}>\r\n                    {breadcrumbMap[url].icon}\r\n                    <Link to={url}>{breadcrumbMap[url].name}</Link>\r\n                </Breadcrumb.Item>\r\n            );\r\n        });\r\n        const breadcrumbItems = [\r\n            <Breadcrumb.Item key=\"home\">\r\n                <HomeOutlined />\r\n                <Link to=\"/\">Home</Link>\r\n            </Breadcrumb.Item>,\r\n        ].concat(extraBreadcrumbItems);\r\n\r\n        return breadcrumbItems\r\n    }\r\n\r\n    render() {\r\n        const BreadcrumbItems = this.getBreadcrumbItems()\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider\r\n                    // collapsible\r\n                    // collapsed={this.state.collapsed}\r\n                    // onCollapse={this.onCollapse}\r\n                    width={150}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\"\r\n                    >\r\n                        {/* <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n                            <Link to=\"/\">首页</Link>\r\n                        </Menu.Item> */}\r\n                        <Menu.Item key=\"2\" icon={<BorderOutlined />}>\r\n                            <Link to=\"/analysis\">可视分析</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" icon={<BlockOutlined />}>\r\n                            <Link to=\"/prediction\">预测分析</Link>\r\n                        </Menu.Item>\r\n                        {/* <Menu.Item key=\"4\" icon={<TeamOutlined />}>\r\n                            <Link to=\"/team\">团队介绍</Link>\r\n                        </Menu.Item>\r\n                        <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\r\n                            <Menu.Item key=\"6\">\r\n                                <Link to=\"/team/1\">Team 1</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n                        </SubMenu> */}\r\n                        {/* <Menu.Item key=\"9\" icon={<FileOutlined />} >others</Menu.Item> */}\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout className=\"site-layout\" style={{ marginLeft: 150 }}>\r\n                    <Header className=\"site-layout-background header-title\" style={{ padding: 0 }} >交通数据可视化分析系统</Header>\r\n                    <Content style={{ margin: '0 16px', overflow: 'initial' }}>\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            {BreadcrumbItems}\r\n                        </Breadcrumb>\r\n                        <div id=\"site-layout-content\" className=\"site-layout-background site-layout-content\">\r\n                            {\r\n                                routes.map((route, index) => {\r\n                                    return <Route key={index} path={route.path} exact={route.exact} component={route.component} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Traffic Vis System ©2020 Created by STDAL</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BasicLayout);","import axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nconst service = axios.create({\r\n    baseURL: 'http://39.105.49.28:5000/',  // 线上环境\r\n    // baseURL: 'http://127.0.0.1:5000/',  // 本地测试环境\r\n    timeout: 120*1000,\r\n    withCredentials:true, // 允许携带cookies\r\n})\r\n\r\nservice.interceptors.response.use(\r\n    response => {\r\n        // console.log(response)\r\n        return response.data\r\n    },\r\n    error => {\r\n        console.log('error', error, error.response)\r\n        let response = error.response;\r\n        if(response === undefined){\r\n            message.error('undefined 加载后台数据出错');\r\n        }\r\n        else{\r\n            let errmessage = [response.status,response.statusText].join(',')\r\n            message.error('错误信息:' + errmessage)\r\n        }\r\n    }\r\n)\r\n\r\nexport default service","import {action, observable} from 'mobx';\r\nimport {message} from 'antd';\r\nimport request from '../common/service'\r\nimport qs from 'qs';\r\nimport {processJsonData} from '../common/apis'\r\n\r\nclass PredictCompareStore {\r\n\r\n    @observable dataLeft = []; // 左边地图数据\r\n    @observable dataRight = []; // 右边地图的数据\r\n    @observable loading = false; // loading状态\r\n\r\n    @observable scorePrecision = 0; // 准确率\r\n    @observable scoreMAE = 0; // 平均绝对误差\r\n    @observable scoreMAPE = 0; // 平均绝对百分比误差\r\n    @observable precisionClear = 0; // 通畅准确率\r\n    @observable precisionSlow = 0; // 缓行准确率\r\n    @observable precisionJam = 0; // 拥堵准确率\r\n    @observable precisionSlowJam = 0; // 缓行和拥堵的准确率\r\n    \r\n    // 可弃置\r\n    // 根据本地json数据的路径加载history的gt和pred数据 \r\n    @action async loaddata(jsonPath,type) {\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        let response = await fetch(jsonPath)\r\n        let resData = await response.json();\r\n        resData = resData.data\r\n        if (resData === undefined) {\r\n            message.warning('获取数据失败');\r\n        }\r\n        else {\r\n            resData = processJsonData(resData)\r\n            data.data = resData\r\n            data.datatime = jsonPath.split('/')[jsonPath.split('/').length - 1].split('.')[0]\r\n        }\r\n        \r\n        if(type === 'gt'){\r\n            this.dataLeft = data\r\n        }\r\n        else if(type === 'pred'){\r\n            this.dataRight = data\r\n        }\r\n        else{\r\n            message.warning('loaddata param error');\r\n        }\r\n    }\r\n\r\n    // 加载history的拥堵GroundTruth数据\r\n    @action async getHistoryGt(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/history/gt' + '?' + qs.stringify(param))\r\n        this.loading = false;\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let data = {\r\n                data: [],\r\n                datatime: ''\r\n            } \r\n            let resData = res.data\r\n            resData = processJsonData(resData) \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataLeft = data\r\n            console.log(res)\r\n        }\r\n\r\n    }\r\n    // 加载history的拥堵预测数据\r\n    @action async getHistoryPred(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/history/pred' + '?' + qs.stringify(param))\r\n        this.loading = false;\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let data = {\r\n                data: [],\r\n                datatime: ''\r\n            } \r\n            let resData = res.data\r\n            resData = processJsonData(resData) \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataRight = data\r\n            this.scorePrecision = res.scorePrecision\r\n            this.scoreMAE = res.scoreMAE\r\n            this.scoreMAPE = res.scoreMAPE\r\n            this.precisionClear = res.precisionClear\r\n            this.precisionSlow = res.precisionSlow\r\n            this.precisionJam = res.precisionJam\r\n            this.precisionSlowJam = res.precisionSlowJam\r\n            console.log(res)\r\n        }\r\n    }\r\n    \r\n    // 加载实时的拥堵预测数据\r\n    // Lr方法\r\n    @action async getPredLr(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/predict/lr')\r\n        this.loading = false;\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let resData = res.data\r\n            resData = processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataLeft = data\r\n            console.log(res)\r\n        }\r\n    }\r\n    // Sage方法\r\n    @action async getPredSage(param){\r\n        this.loading = true;\r\n        const res = await request.get('data/predict/sage')\r\n        this.loading = false;\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let resData = res.data\r\n            resData = processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataRight = data\r\n            console.log(res)\r\n        }\r\n    }\r\n\r\n    // 清理数据 \r\n    @action async clearAll(){\r\n        this.dataLeft = []; // 左边地图数据\r\n        this.dataRight = []; // 右边地图的数据\r\n    }\r\n}\r\n\r\n\r\nconst predictCompareStore = new PredictCompareStore();\r\nexport default predictCompareStore;","import predictCompareStore from './predictCompareStore';\r\nimport analysisStore from './analysisStore';\r\n\r\nconst store = {\r\n    analysisStore,\r\n    predictCompareStore,\r\n}\r\nexport default store;","import {action, observable} from 'mobx';\r\nimport {message} from 'antd';\r\nimport request from '../common/service'\r\nimport {processJsonData} from '../common/apis'\r\n\r\n\r\nclass AnalysisStore {\r\n    @observable dataGt = []; // 实时的真实数据\r\n    @observable loading = false; // loading状态\r\n\r\n    // 加载实时拥堵数据\r\n    @action async getRealTimeData(param){\r\n        this.loading = true\r\n        const res = await request.get('data')\r\n        this.loading = false\r\n        // 初始化数据结构\r\n        let data = {\r\n            data: [],\r\n            datatime: ''\r\n        }\r\n        if(res === undefined){\r\n            message.error('后端数据 undefined')\r\n        }\r\n        else{\r\n            let resData = res.data\r\n            resData = processJsonData(resData)      \r\n            data.data = resData\r\n            data.datatime = res.jsonName\r\n            this.dataGt = data\r\n            console.log(res)\r\n        }\r\n    }\r\n\r\n    // 清理数据 \r\n    @action async clearAll(){\r\n        this.dataGt = [];\r\n    }\r\n}\r\n\r\n\r\nconst analysisStore = new AnalysisStore();\r\nexport default analysisStore;","import React from 'react';\r\nimport BasicLayout from './layouts/BasicLayout';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'mobx-react'\r\nimport store from './store/index'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <BasicLayout />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>\r\n  <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}